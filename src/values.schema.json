{
  "$schema": "http://json-schema.org/draft-07/schema",
  "$id": "values.schema.json",
  "type": "object",
  "additionalProperties": false,
  "default": {},
  "examples": [
    {
      "todo": "TODO"
    }
  ],
  "properties": {
    "var": {
      "$id": "#/properties/var",
      "title": "Chart variables",
      "type": "object",
      "default": null
    },
    "nameOverride": {
      "$id": "#/properties/nameOverride",
      "title": "The overriden name",
      "description": "The custom release name to use instead of .Release.Name",
      "type": [
        "string",
        "null"
      ],
      "default": null
    },
    "forceRedeploy": {
      "$id": "#/properties/forceRedeploy",
      "title": "The force redeploy flag",
      "description": "True if should redeploy even if the chart is unchanged, false otherwise",
      "type": "boolean",
      "default": false
    },
    "clusterIssuers": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "$id": "#/clusterIssuers",
      "title": "Cert-manager ClusterIssuers",
      "description": "List of ClusterIssuer resources to create",
      "type": "array",
      "default": [],
      "items": {
        "type": "object",
        "required": [
          "name",
          "acme"
        ],
        "properties": {
          "name": {
            "type": "string",
            "title": "ClusterIssuer name",
            "description": "The name of the ClusterIssuer resource"
          },
          "labels": {
            "type": "object",
            "title": "Labels",
            "description": "Labels to apply to the ClusterIssuer"
          },
          "annotations": {
            "type": "object",
            "title": "Annotations",
            "description": "Annotations to apply to the ClusterIssuer"
          },
          "acme": {
            "type": "object",
            "required": [
              "email",
              "privateKeySecretRef"
            ],
            "properties": {
              "email": {
                "type": "string",
                "title": "Email",
                "description": "Email address for ACME account"
              },
              "server": {
                "type": "string",
                "title": "ACME server",
                "description": "ACME server URL",
                "default": "https://acme-v02.api.letsencrypt.org/directory"
              },
              "privateKeySecretRef": {
                "type": "object",
                "required": [
                  "name"
                ],
                "properties": {
                  "name": {
                    "type": "string",
                    "title": "Secret name",
                    "description": "Name of the secret containing the ACME account private key"
                  }
                }
              },
              "solvers": {
                "type": "array",
                "title": "Solvers",
                "description": "List of solvers for ACME challenges",
                "items": {
                  "type": "object",
                  "properties": {
                    "dns01": {
                      "type": "object",
                      "properties": {
                        "cloudflare": {
                          "type": "object",
                          "required": [
                            "email",
                            "apiTokenSecretRef"
                          ],
                          "properties": {
                            "email": {
                              "type": "string",
                              "title": "Cloudflare email",
                              "description": "Cloudflare account email"
                            },
                            "apiTokenSecretRef": {
                              "type": "object",
                              "required": [
                                "name",
                                "key"
                              ],
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "title": "Secret name",
                                  "description": "Name of the secret containing the Cloudflare API token"
                                },
                                "key": {
                                  "type": "string",
                                  "title": "Secret key",
                                  "description": "Key in the secret containing the Cloudflare API token",
                                  "default": "api-token"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "certificates": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "$id": "#/certificates",
      "title": "Cert-manager Certificates",
      "description": "List of Certificate resources to create",
      "type": "array",
      "default": [],
      "items": {
        "type": "object",
        "required": [
          "name",
          "secretName",
          "issuerRef",
          "commonName",
          "dnsNames"
        ],
        "properties": {
          "name": {
            "type": "string",
            "title": "Certificate name",
            "description": "The name of the Certificate resource"
          },
          "labels": {
            "type": "object",
            "title": "Labels",
            "description": "Labels to apply to the Certificate"
          },
          "annotations": {
            "type": "object",
            "title": "Annotations",
            "description": "Annotations to apply to the Certificate"
          },
          "secretName": {
            "type": "string",
            "title": "Secret name",
            "description": "Name of the secret that will store the certificate"
          },
          "issuerRef": {
            "type": "object",
            "required": [
              "name"
            ],
            "properties": {
              "name": {
                "type": "string",
                "title": "Issuer name",
                "description": "Name of the Issuer or ClusterIssuer"
              },
              "kind": {
                "type": "string",
                "title": "Issuer kind",
                "description": "Kind of the Issuer (Issuer or ClusterIssuer)",
                "default": "ClusterIssuer"
              },
              "group": {
                "type": "string",
                "title": "Issuer group",
                "description": "Group of the Issuer"
              }
            }
          },
          "commonName": {
            "type": "string",
            "title": "Common name",
            "description": "Common name for the certificate"
          },
          "dnsNames": {
            "type": "array",
            "title": "DNS names",
            "description": "List of DNS names to include in the certificate",
            "items": {
              "type": "string"
            }
          },
          "duration": {
            "type": "string",
            "title": "Duration",
            "description": "Duration of the certificate validity"
          },
          "renewBefore": {
            "type": "string",
            "title": "Renew before",
            "description": "How long before expiry to renew the certificate"
          },
          "usages": {
            "type": "array",
            "title": "Key usages",
            "description": "List of key usages for the certificate",
            "items": {
              "type": "string"
            }
          },
          "keySize": {
            "type": "integer",
            "title": "Key size",
            "description": "Size of the private key"
          },
          "keyAlgorithm": {
            "type": "string",
            "title": "Key algorithm",
            "description": "Algorithm for the private key"
          },
          "keyEncoding": {
            "type": "string",
            "title": "Key encoding",
            "description": "Encoding for the private key"
          }
        }
      }
    },
    "clusterRole": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "$id": "#/clusterRole",
      "title": "The cluster role",
      "description": "Schema for Kubernetes ClusterRole resources",
      "type": "object",
      "default": {},
      "additionalProperties": false,
      "required": [
        "name",
        "rules"
      ],
      "properties": {
        "name": {
          "title": "The name of the cluster role",
          "description": "Name of the ClusterRole resource",
          "type": "string",
          "default": "",
          "minLength": 1
        },
        "rules": {
          "title": "The service account rules",
          "description": "List of rules that define the permissions",
          "type": "array",
          "default": [],
          "additionalItems": true,
          "items": {
            "type": "object",
            "default": {},
            "additionalProperties": false,
            "required": [
              "apiGroups",
              "resources",
              "verbs"
            ],
            "properties": {
              "apiGroups": {
                "title": "The api groups to get access for",
                "description": "List of API groups this rule applies to",
                "type": "array",
                "default": [],
                "additionalItems": true,
                "items": {
                  "type": "string",
                  "default": ""
                }
              },
              "resources": {
                "title": "The resources to get access for",
                "description": "List of resources this rule applies to",
                "type": "array",
                "default": [],
                "additionalItems": true,
                "items": {
                  "type": "string",
                  "default": "",
                  "minLength": 1
                }
              },
              "verbs": {
                "title": "The verbs to get access for",
                "description": "List of verbs this rule applies to",
                "type": "array",
                "default": [],
                "additionalItems": true,
                "items": {
                  "type": "string",
                  "default": "",
                  "minLength": 1
                }
              }
            }
          }
        }
      }
    },
    "clusterRoleBinding": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "$id": "#/clusterRoleBinding",
      "title": "The cluster role binding",
      "description": "Describes a binding between a cluster role and a service account",
      "type": "object",
      "default": {},
      "additionalProperties": false,
      "required": [
        "name",
        "clusterRoleName",
        "serviceAccountName"
      ],
      "properties": {
        "name": {
          "title": "The binding name",
          "description": "Name of the ClusterRoleBinding resource",
          "type": "string",
          "default": "",
          "minLength": 1
        },
        "clusterRoleName": {
          "title": "The cluster role name to bind",
          "description": "Name of the ClusterRole to bind",
          "type": "string",
          "default": "",
          "minLength": 1
        },
        "serviceAccountName": {
          "title": "The service account name to bind",
          "description": "Name of the ServiceAccount to bind",
          "type": "string",
          "default": "",
          "minLength": 1
        }
      }
    },
    "configMaps": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "$id": "#/configMaps",
      "title": "The configMaps schema",
      "description": "Structure of the configMap object collection.",
      "type": "array",
      "additionalItems": true,
      "default": [],
      "items": {
        "title": "The configMap schema",
        "description": "Structure of the configMap object.",
        "type": "object",
        "additionalProperties": false,
        "required": [
          "name",
          "data"
        ],
        "properties": {
          "name": {
            "title": "The configMap",
            "description": "The name of the configMap to be created.",
            "type": "string",
            "default": "",
            "minLength": 1
          },
          "namespace": {
            "title": "The namespace",
            "description": "The namespace of the configMap to be created.",
            "type": "string",
            "default": "",
            "minLength": 1
          },
          "data": {
            "title": "The data of the configMap",
            "description": "Collection of key-value pairs to represent the configMap data.",
            "type": "object",
            "additionalProperties": true,
            "default": {}
          },
          "labels": {
            "title": "The labels schema",
            "description": "Additional labels to be added to the configMap.",
            "type": "object",
            "default": {},
            "additionalProperties": true
          },
          "annotations": {
            "title": "The annotations schema",
            "description": "Additional annotations to be added to the configMap.",
            "type": "object",
            "default": {},
            "additionalProperties": true
          }
        }
      }
    },
    "deployment": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "$id": "#/deployment",
      "title": "The deployment",
      "description": "Schema for Kubernetes Deployment resources",
      "type": "object",
      "default": {},
      "additionalProperties": true,
      "required": [
        "strategy",
        "containers"
      ],
      "properties": {
        "annotations": {},
        "replicas": {
          "$id": "#/deployment/properties/replicas",
          "title": "The replicas count",
          "description": "The number of replicas for this deployment",
          "type": "integer",
          "default": 0,
          "minimum": 0,
          "maximum": 5
        },
        "strategy": {
          "$id": "#/deployment/strategy",
          "title": "The deployment strategy",
          "description": "",
          "type": "object",
          "default": {},
          "additionalProperties": false,
          "required": [
            "type"
          ],
          "allOf": [
            {
              "if": {
                "properties": {
                  "type": {
                    "const": "RollingUpdate"
                  }
                }
              },
              "then": {
                "required": [
                  "maxSurge",
                  "maxUnavailable"
                ],
                "allOf": [
                  {
                    "anyOf": [
                      {
                        "properties": {
                          "maxSurge": {
                            "type": "string",
                            "pattern": "^[1-9][0-9]?%$|^100%$"
                          }
                        }
                      },
                      {
                        "properties": {
                          "maxSurge": {
                            "type": "integer",
                            "maximum": 5
                          }
                        }
                      }
                    ]
                  },
                  {
                    "anyOf": [
                      {
                        "properties": {
                          "maxUnavailable": {
                            "type": "string",
                            "pattern": "^[1-9][0-9]?%$|^100%$"
                          }
                        }
                      },
                      {
                        "properties": {
                          "maxUnavailable": {
                            "type": "integer",
                            "maximum": 5
                          }
                        }
                      }
                    ]
                  }
                ]
              },
              "else": {
                "properties": {
                  "maxSurge": {
                    "const": null
                  },
                  "maxUnavailable": {
                    "const": null
                  }
                }
              }
            }
          ],
          "properties": {
            "type": {
              "$id": "#/deployment/strategy/properties/type",
              "title": "The strategy type",
              "description": "",
              "type": "string",
              "default": "",
              "enum": [
                "Recreate",
                "RollingUpdate"
              ]
            },
            "maxSurge": {
              "$id": "#/deployment/strategy/properties/maxSurge",
              "title": "The max surge count",
              "description": "The maximum number of replicas to deploy over the current replicas limit",
              "type": [
                "integer",
                "string"
              ],
              "default": 1
            },
            "maxUnavailable": {
              "$id": "#/deployment/strategy/properties/maxUnavailable",
              "title": "The max unavailable count",
              "description": "The maximum number of replicas to make unavailable when deploying newer replicas",
              "type": [
                "integer",
                "string"
              ],
              "default": 1
            }
          }
        },
        "serviceAccountName": {
          "$id": "#/deployment/properties/serviceAccountName",
          "title": "The service account name",
          "description": "",
          "type": "string",
          "default": "",
          "minLength": 1
        },
        "securityContext": {
          "$id": "#/deployment/properties/securityContext",
          "title": "The security context",
          "description": "Structue of the securityContext object.",
          "type": "object"
        },
        "imagePullSecrets": {
          "$id": "#/deployment/properties/imagePullSecrets",
          "title": "The image pull secrets",
          "description": "The secrets used to pull images from private registries.",
          "type": "array",
          "default": [],
          "additionalItems": true,
          "items": {
            "$id": "#/deployment/properties/imagePullSecrets/items",
            "anyOf": [
              {
                "$id": "#/deployment/properties/imagePullSecrets/items/anyOf/0",
                "title": "The image pull secret",
                "description": "The secret used to pull images from private registries.",
                "type": "object",
                "default": {},
                "additionalProperties": false,
                "required": [
                  "name"
                ],
                "properties": {
                  "name": {
                    "$id": "#/deployment/properties/imagePullSecrets/items/anyOf/0/properties/name",
                    "title": "The image pull secret name",
                    "description": "The image pull secret name.",
                    "type": "string",
                    "default": "",
                    "minLength": 1
                  }
                }
              }
            ]
          }
        },
        "terminationGracePeriodSeconds": {
          "$id": "#/deployment/properties/terminationGracePeriodSeconds",
          "title": "The schema of terminationGracePeriodSeconds",
          "description": "The amount of seconds to wait before forcefully stopping the pod after entering the Terminating state.",
          "type": "integer",
          "default": 0
        },
        "initContainers": {
          "$id": "#/deployment/properties/initContainers",
          "title": "The schema of init containers",
          "description": "",
          "type": "array",
          "default": [],
          "additionalItems": true,
          "items": {
            "$id": "#/deployment/properties/containers/items",
            "anyOf": [
              {
                "$id": "#/deployment/properties/containers/items/anyOf/0",
                "title": "The schema of a container",
                "description": "",
                "type": "object",
                "additionalProperties": false,
                "required": [
                  "name",
                  "image",
                  "resources"
                ],
                "properties": {
                  "name": {
                    "$id": "#/properties/configMaps/items/anyOf/0/properties/name",
                    "title": "The container",
                    "description": "The name of the container to be created.",
                    "type": "string",
                    "default": "",
                    "minLength": 1
                  },
                  "image": {
                    "$id": "#/deployment/properties/items/anyOf/0/properties/image",
                    "title": "The docker image",
                    "description": "The docker image to be used as template for the container.",
                    "type": "object",
                    "default": {},
                    "additionalProperties": false,
                    "required": [
                      "repository",
                      "tag"
                    ],
                    "properties": {
                      "repository": {
                        "$id": "#/properties/configMaps/items/anyOf/0/properties/image/properties/repository",
                        "title": "The docker image repository",
                        "description": "The image repository from where to pull it.",
                        "type": "string",
                        "default": "",
                        "minLength": 1
                      },
                      "tag": {
                        "$id": "#/properties/configMaps/items/anyOf/0/properties/image/properties/tag",
                        "title": "The docker image tag",
                        "description": "The image tag to pull (i.e. latest).",
                        "type": "string",
                        "default": "",
                        "minLength": 1
                      }
                    }
                  },
                  "imagePullPolicy": {
                    "$id": "#/deployment/properties/containers/items/anyOf/0/properties/imagePullPolicy",
                    "title": "The image pull policy",
                    "description": "The image pull policy.",
                    "type": "string",
                    "default": "Always",
                    "enum": [
                      "Always",
                      "IfNotPresent",
                      "Never"
                    ]
                  },
                  "securityContext": {
                    "$id": "#/deployment/properties/containers/items/anyOf/0/properties/securityContext",
                    "title": "The security context",
                    "description": "Structue of the securityContext object.",
                    "type": "object"
                  },
                  "args": {
                    "$id": "#/deployment/properties/containers/items/anyOf/0/properties/args",
                    "title": "The container args",
                    "description": "The arguments to pass to the container entrypoint or the command, if a command is defined.",
                    "type": "array",
                    "default": [],
                    "additionalItems": true,
                    "items": {
                      "$id": "#/deployment/properties/containers/items/anyOf/0/properties/args/items",
                      "anyOf": [
                        {
                          "$id": "#/deployment/properties/containers/items/anyOf/0/properties/args/items/anyOf/0",
                          "title": "The argument",
                          "description": "Argument to be passed to the container entrypoint or command.",
                          "type": "string",
                          "default": "",
                          "minLength": 1
                        }
                      ]
                    }
                  },
                  "command": {
                    "$id": "#/deployment/properties/containers/items/anyOf/0/properties/command",
                    "title": "The conainter commands",
                    "description": "The command to be executed by the container.",
                    "type": "array",
                    "default": [],
                    "additionalItems": true,
                    "items": {
                      "$id": "#/deployment/properties/containers/items/anyOf/0/properties/command/items",
                      "anyOf": [
                        {
                          "$id": "#/deployment/properties/containers/items/anyOf/0/properties/command/items/anyOf/0",
                          "title": "The command",
                          "description": "Command to be executed by the container.",
                          "type": "string",
                          "default": "",
                          "minLength": 1
                        }
                      ]
                    }
                  },
                  "env": {
                    "$id": "#/deployment/properties/containers/items/anyOf/0/properties/env",
                    "title": "The environment variables",
                    "description": "Environment variables to be passed to the container.",
                    "type": "array",
                    "default": [],
                    "additionalItems": true,
                    "items": {
                      "$id": "#/deployment/properties/containers/items/anyOf/0/properties/env/items",
                      "anyOf": [
                        {
                          "$id": "#/deployment/properties/containers/items/anyOf/0/properties/env/items/anyOf/0",
                          "title": "The environment variable",
                          "description": "Structure of an environment variable.",
                          "type": "object",
                          "default": {},
                          "additionalProperties": false,
                          "required": [
                            "name",
                            "value"
                          ],
                          "properties": {
                            "name": {
                              "$id": "#/deployment/properties/containers/items/anyOf/0/properties/env/items/anyOf/0/properties/name",
                              "title": "The environment variable",
                              "description": "The name of the environment variable.",
                              "type": "string",
                              "default": "",
                              "minLength": 1
                            },
                            "value": {
                              "$id": "#/deployment/properties/containers/items/anyOf/0/properties/env/items/anyOf/0/properties/value",
                              "title": "The environment variable value",
                              "description": "The value of the environment variable.",
                              "type": "string",
                              "default": "",
                              "minLength": 1
                            }
                          }
                        }
                      ]
                    }
                  },
                  "envFromSecret": {
                    "$id": "#/deployment/properties/containers/items/anyOf/0/properties/envFromSecret",
                    "title": "The environment variables from secrets",
                    "description": "The environment variables to retrieve from secrets.",
                    "type": "array",
                    "default": [],
                    "additionalItems": true,
                    "items": {
                      "$id": "#/deployment/properties/containers/items/anyOf/0/properties/envFromSecret/items",
                      "anyOf": [
                        {
                          "$id": "#/deployment/properties/containers/items/anyOf/0/properties/envFromSecret/items/anyOf/0",
                          "title": "The environment variables from secret",
                          "description": "The environment variables to retrieve from a certain secret.",
                          "type": "object",
                          "default": {},
                          "required": [
                            "secretName",
                            "envs"
                          ],
                          "properties": {
                            "secretName": {
                              "$id": "#/deployment/properties/containers/items/anyOf/0/properties/envFromSecret/properties/secretName",
                              "title": "The secret name",
                              "description": "The name of the secret to retrieve environment variables from.",
                              "type": "string",
                              "default": "",
                              "minLength": 1
                            },
                            "envs": {
                              "$id": "#/deployment/properties/containers/items/anyOf/0/properties/envFromSecret/properties/envs",
                              "title": "The environment variables",
                              "description": "The environment variables to retrieve from the secret.",
                              "type": "array",
                              "default": [],
                              "additionalItems": true,
                              "items": {
                                "$id": "#/deployment/properties/containers/items/anyOf/0/properties/envFromSecret/properties/envs/items",
                                "anyOf": [
                                  {
                                    "$id": "#/deployment/properties/containers/items/anyOf/0/properties/envFromSecret/properties/envs/items/anyOf/0",
                                    "title": "The environment variable",
                                    "description": "The environment variable to retrie from the secret.",
                                    "type": "object",
                                    "default": {},
                                    "additionalProperties": false,
                                    "required": [
                                      "name",
                                      "key"
                                    ],
                                    "properties": {
                                      "name": {
                                        "$id": "#/deployment/properties/containers/items/anyOf/0/properties/envFromSecret/properties/envs/items/anyOf/0/properties/name",
                                        "title": "The environment variable name",
                                        "description": "The name of the environment variable inside the container.",
                                        "type": "string",
                                        "default": "",
                                        "minLength": 1
                                      },
                                      "key": {
                                        "$id": "#/deployment/properties/containers/items/anyOf/0/properties/envFromSecret/properties/envs/items/anyOf/0/properties/key",
                                        "title": "The secret key",
                                        "description": "The key from the secret to retrieve the environment variable from.",
                                        "type": "string",
                                        "default": "",
                                        "minLength": 1
                                      }
                                    }
                                  }
                                ]
                              }
                            }
                          }
                        }
                      ]
                    }
                  },
                  "envFromConfigmap": {
                    "$id": "#/deployment/properties/containers/items/anyOf/0/properties/envFromConfigmap",
                    "title": "The environment variables from configMaps",
                    "description": "The environment variables to retrieve from configMaps.",
                    "type": "array",
                    "default": [],
                    "additionalItems": true,
                    "items": {
                      "$id": "#/deployment/properties/containers/items/anyOf/0/properties/envFromConfigmap/items",
                      "anyOf": [
                        {
                          "$id": "#/deployment/properties/containers/items/anyOf/0/properties/envFromConfigmap/items/anyOf/0",
                          "title": "The environment variables from configMap",
                          "description": "The environment variables to retrieve from a certain configMap.",
                          "type": "object",
                          "default": {},
                          "required": [
                            "configMapName",
                            "envs"
                          ],
                          "properties": {
                            "configMapName": {
                              "$id": "#/deployment/properties/containers/items/anyOf/0/properties/envFromConfigmap/properties/configMapName",
                              "title": "The configMap name",
                              "description": "The name of the configMap to retrieve environment variables from.",
                              "type": "string",
                              "default": "",
                              "minLength": 1
                            },
                            "envs": {
                              "$id": "#/deployment/properties/containers/items/anyOf/0/properties/envFromConfigmap/properties/envs",
                              "title": "The environment variables",
                              "description": "The environment variables to retrieve from the configMap.",
                              "type": "array",
                              "default": [],
                              "additionalItems": true,
                              "items": {
                                "$id": "#/deployment/properties/containers/items/anyOf/0/properties/envFromConfigmap/properties/envs/items",
                                "anyOf": [
                                  {
                                    "$id": "#/deployment/properties/containers/items/anyOf/0/properties/envFromConfigmap/properties/envs/items/anyOf/0",
                                    "title": "The environment variable",
                                    "description": "The environment variable to retrie from the configMap.",
                                    "type": "object",
                                    "default": {},
                                    "additionalProperties": false,
                                    "required": [
                                      "name",
                                      "key"
                                    ],
                                    "properties": {
                                      "name": {
                                        "$id": "#/deployment/properties/containers/items/anyOf/0/properties/envFromConfigmap/properties/envs/items/anyOf/0/properties/name",
                                        "title": "The environment variable name",
                                        "description": "The name of the environment variable inside the container.",
                                        "type": "string",
                                        "default": "",
                                        "minLength": 1
                                      },
                                      "key": {
                                        "$id": "#/deployment/properties/containers/items/anyOf/0/properties/envFromConfigmap/properties/envs/items/anyOf/0/properties/key",
                                        "title": "The configMap key",
                                        "description": "The key from the configMap to retrieve the environment variable from.",
                                        "type": "string",
                                        "default": "",
                                        "minLength": 1
                                      }
                                    }
                                  }
                                ]
                              }
                            }
                          }
                        }
                      ]
                    }
                  },
                  "envFromFieldRef": {
                    "$id": "#/deployment/properties/containers/items/anyOf/0/properties/envFromConfigmap",
                    "title": "The environment variables from field refs",
                    "description": "",
                    "type": "array",
                    "default": [],
                    "additionalItems": true,
                    "items": {
                      "$id": "#/deployment/properties/containers/items/anyOf/0/properties/envFromConfigmap/items",
                      "anyOf": [
                        {
                          "$id": "#/deployment/properties/containers/items/anyOf/0/properties/envFromConfigmap/items/anyOf/0",
                          "title": "The env from field ref",
                          "description": "",
                          "type": "object",
                          "default": {},
                          "additionalProperties": false,
                          "required": [
                            "name",
                            "fieldPath"
                          ],
                          "properties": {
                            "name": {
                              "$id": "#/deployment/properties/containers/items/anyOf/0/properties/envFromConfigmap/items/anyOf/0/properties/name",
                              "title": "The environment variable name",
                              "description": "",
                              "type": "string",
                              "default": "",
                              "minLength": 1
                            },
                            "fieldPath": {
                              "$id": "#/deployment/properties/containers/items/anyOf/0/properties/envFromConfigmap/items/anyOf/0/properties/fieldPath",
                              "title": "The field path",
                              "description": "",
                              "type": "string",
                              "default": "",
                              "minLength": 1
                            }
                          }
                        }
                      ]
                    }
                  },
                  "ports": {
                    "$id": "#/deployment/properties/containers/items/anyOf/0/properties/ports",
                    "title": "The container ports",
                    "description": "The container ports to forward to the outside.",
                    "type": "array",
                    "default": [],
                    "additionalItems": true,
                    "items": {
                      "$id": "#/deployment/properties/containers/items/anyOf/0/properties/ports/items",
                      "anyOf": [
                        {
                          "$id": "#/deployment/properties/containers/items/anyOf/0/properties/ports/items/anyOf/0",
                          "title": "The container port",
                          "description": "Structure of the port object.",
                          "type": "object",
                          "default": {},
                          "additionalProperties": false,
                          "required": [
                            "name",
                            "containerPort"
                          ],
                          "properties": {
                            "name": {
                              "$id": "#/deployment/properties/containers/items/anyOf/0/properties/ports/items/anyOf/0/properties/name",
                              "title": "The port name",
                              "description": "The name of the port outside of the container.",
                              "type": "string",
                              "default": "",
                              "minLength": 1
                            },
                            "containerPort": {
                              "$id": "#/deployment/properties/containers/items/anyOf/0/properties/ports/items/anyOf/0/properties/containerPort",
                              "title": "The container port",
                              "description": "The port of the container to forward outside of it.",
                              "type": "number",
                              "default": 0,
                              "minimum": 0
                            },
                            "protocol": {
                              "$id": "#/deployment/properties/containers/items/anyOf/0/properties/ports/items/anyOf/0/properties/protocol",
                              "title": "The port protocol",
                              "description": "",
                              "type": "string",
                              "default": "TCP",
                              "enum": [
                                "TCP",
                                "UDP",
                                "SCTP",
                                "HTTP"
                              ]
                            }
                          }
                        }
                      ]
                    }
                  },
                  "lifecycle": {},
                  "livenessProbe": {},
                  "readinessProbe": {},
                  "resources": {
                    "$id": "#/deployment/properties/containers/items/anyOf/0/properties/resources",
                    "title": "The container resources",
                    "description": "",
                    "type": "object",
                    "default": {},
                    "additionalProperties": false,
                    "properties": {
                      "requests": {
                        "$id": "#/deployment/properties/containers/items/anyOf/0/properties/resources/properties/requests",
                        "title": "The container resources requests",
                        "description": "The soft limit for the resources used by the container",
                        "type": "object",
                        "default": {},
                        "additionalProperties": false,
                        "properties": {
                          "cpu": {
                            "$id": "#/deployment/properties/containers/items/anyOf/0/properties/resources/properties/requests/properties/cpu",
                            "title": "The cpu limit",
                            "description": "Required to be at least 10m",
                            "type": "string",
                            "default": "100m",
                            "pattern": "^(0|[1-9][0-9]*)m$"
                          },
                          "memory": {
                            "$id": "#/deployment/properties/containers/items/anyOf/0/properties/resources/properties/requests/properties/memory",
                            "title": "The memory limit",
                            "description": "Required to be at least 10Mi",
                            "type": "string",
                            "default": "128Mi",
                            "pattern": "^(0|[1-9][0-9]*)Mi$"
                          }
                        }
                      },
                      "limits": {
                        "$id": "#/deployment/properties/containers/items/anyOf/0/properties/resources/properties/limits",
                        "title": "The container resources limits",
                        "description": "The hard limit for the resources used by the container",
                        "type": "object",
                        "default": {},
                        "additionalProperties": false,
                        "properties": {
                          "cpu": {
                            "$id": "#/deployment/properties/containers/items/anyOf/0/properties/resources/properties/requests/properties/cpu",
                            "title": "The cpu limit",
                            "description": "Required to be at least 10m",
                            "type": "string",
                            "default": "100m",
                            "pattern": "^[1-9][0-9]+m$"
                          },
                          "memory": {
                            "$id": "#/deployment/properties/containers/items/anyOf/0/properties/resources/properties/requests/properties/memory",
                            "title": "The memory limit",
                            "description": "Required to be at least 10Mi",
                            "type": "string",
                            "default": "128Mi",
                            "pattern": "^[1-9][0-9]+Mi$"
                          }
                        }
                      }
                    }
                  },
                  "volumeMounts": {
                    "$id": "#/deployment/properties/containers/items/anyOf/0/properties/volumeMounts",
                    "title": "The volume mounts",
                    "description": "The volumes to be mounted inside the container.",
                    "type": "array",
                    "default": [],
                    "additionalItems": true,
                    "items": {
                      "$id": "#/deployment/properties/containers/items/anyOf/0/properties/volumeMounts/items",
                      "anyOf": [
                        {
                          "$id": "#/deployment/properties/containers/items/anyOf/0/properties/volumeMounts/items/anyOf/0",
                          "title": "The volume mount",
                          "description": "The volume to be mounted inside the container.",
                          "type": "object",
                          "default": {},
                          "additionalProperties": false,
                          "required": [
                            "name",
                            "mountPath"
                          ],
                          "properties": {
                            "name": {
                              "$id": "#/deployment/properties/containers/items/anyOf/0/properties/volumeMounts/items/anyOf/0/properties/name",
                              "title": "The volume name",
                              "description": "The name of the volume to mount.",
                              "type": "string",
                              "default": "",
                              "minLength": 1
                            },
                            "mountPath": {
                              "$id": "#/deployment/properties/containers/items/anyOf/0/properties/volumeMounts/items/anyOf/0/properties/mountPath",
                              "title": "The mount path",
                              "description": "The path where to mount the volume inside the container.",
                              "type": "string",
                              "default": "",
                              "minLength": 1
                            },
                            "subPath": {
                              "$id": "#/deployment/properties/containers/items/anyOf/0/properties/volumeMounts/items/anyOf/0/properties/subPath",
                              "title": "The sub path",
                              "description": "The sub directory to create and use inside the persistent volume.",
                              "type": "string",
                              "default": "",
                              "minLength": 1
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              }
            ]
          }
        },
        "containers": {
          "$id": "#/deployment/properties/containers",
          "title": "The schema of containers",
          "description": "The containers to be created as part of this deployment.",
          "type": "array",
          "default": [],
          "additionalItems": true,
          "items": {
            "$id": "#/deployment/properties/containers/items",
            "anyOf": [
              {
                "$id": "#/deployment/properties/containers/items/anyOf/0",
                "title": "The schema of a container",
                "description": "",
                "type": "object",
                "additionalProperties": false,
                "required": [
                  "name",
                  "image",
                  "resources"
                ],
                "properties": {
                  "name": {
                    "$id": "#/properties/configMaps/items/anyOf/0/properties/name",
                    "title": "The container",
                    "description": "The name of the container to be created.",
                    "type": "string",
                    "default": "",
                    "minLength": 1
                  },
                  "image": {
                    "$id": "#/deployment/properties/items/anyOf/0/properties/image",
                    "title": "The docker image",
                    "description": "The docker image to be used as template for the container.",
                    "type": "object",
                    "default": {},
                    "additionalProperties": false,
                    "required": [
                      "repository",
                      "tag"
                    ],
                    "properties": {
                      "repository": {
                        "$id": "#/properties/configMaps/items/anyOf/0/properties/image/properties/repository",
                        "title": "The docker image repository",
                        "description": "The image repository from where to pull it.",
                        "type": "string",
                        "default": "",
                        "minLength": 1
                      },
                      "tag": {
                        "$id": "#/properties/configMaps/items/anyOf/0/properties/image/properties/tag",
                        "title": "The docker image tag",
                        "description": "The image tag to pull (i.e. latest).",
                        "type": "string",
                        "default": "",
                        "minLength": 1
                      }
                    }
                  },
                  "imagePullPolicy": {
                    "$id": "#/deployment/properties/containers/items/anyOf/0/properties/imagePullPolicy",
                    "title": "The image pull policy",
                    "description": "The image pull policy.",
                    "type": "string",
                    "default": "Always",
                    "enum": [
                      "Always",
                      "IfNotPresent",
                      "Never"
                    ]
                  },
                  "securityContext": {
                    "$id": "#/deployment/properties/containers/items/anyOf/0/properties/securityContext",
                    "title": "The security context",
                    "description": "Structue of the securityContext object.",
                    "type": "object"
                  },
                  "args": {
                    "$id": "#/deployment/properties/containers/items/anyOf/0/properties/args",
                    "title": "The container args",
                    "description": "The arguments to pass to the container entrypoint or the command, if a command is defined.",
                    "type": "array",
                    "default": [],
                    "additionalItems": true,
                    "items": {
                      "$id": "#/deployment/properties/containers/items/anyOf/0/properties/args/items",
                      "anyOf": [
                        {
                          "$id": "#/deployment/properties/containers/items/anyOf/0/properties/args/items/anyOf/0",
                          "title": "The argument",
                          "description": "Argument to be passed to the container entrypoint or command.",
                          "type": "string",
                          "default": "",
                          "minLength": 1
                        }
                      ]
                    }
                  },
                  "command": {
                    "$id": "#/deployment/properties/containers/items/anyOf/0/properties/command",
                    "title": "The conainter commands",
                    "description": "The command to be executed by the container.",
                    "type": "array",
                    "default": [],
                    "additionalItems": true,
                    "items": {
                      "$id": "#/deployment/properties/containers/items/anyOf/0/properties/command/items",
                      "anyOf": [
                        {
                          "$id": "#/deployment/properties/containers/items/anyOf/0/properties/command/items/anyOf/0",
                          "title": "The command",
                          "description": "Command to be executed by the container.",
                          "type": "string",
                          "default": "",
                          "minLength": 1
                        }
                      ]
                    }
                  },
                  "env": {
                    "$id": "#/deployment/properties/containers/items/anyOf/0/properties/env",
                    "title": "The environment variables",
                    "description": "Environment variables to be passed to the container.",
                    "type": "array",
                    "default": [],
                    "additionalItems": true,
                    "items": {
                      "$id": "#/deployment/properties/containers/items/anyOf/0/properties/env/items",
                      "anyOf": [
                        {
                          "$id": "#/deployment/properties/containers/items/anyOf/0/properties/env/items/anyOf/0",
                          "title": "The environment variable",
                          "description": "Structure of an environment variable.",
                          "type": "object",
                          "default": {},
                          "additionalProperties": false,
                          "required": [
                            "name",
                            "value"
                          ],
                          "properties": {
                            "name": {
                              "$id": "#/deployment/properties/containers/items/anyOf/0/properties/env/items/anyOf/0/properties/name",
                              "title": "The environment variable",
                              "description": "The name of the environment variable.",
                              "type": "string",
                              "default": "",
                              "minLength": 1
                            },
                            "value": {
                              "$id": "#/deployment/properties/containers/items/anyOf/0/properties/env/items/anyOf/0/properties/value",
                              "title": "The environment variable value",
                              "description": "The value of the environment variable.",
                              "type": "string",
                              "default": "",
                              "minLength": 1
                            }
                          }
                        }
                      ]
                    }
                  },
                  "envFromSecret": {
                    "$id": "#/deployment/properties/containers/items/anyOf/0/properties/envFromSecret",
                    "title": "The environment variables from secrets",
                    "description": "The environment variables to retrieve from secrets.",
                    "type": "array",
                    "default": [],
                    "additionalItems": true,
                    "items": {
                      "$id": "#/deployment/properties/containers/items/anyOf/0/properties/envFromSecret/items",
                      "anyOf": [
                        {
                          "$id": "#/deployment/properties/containers/items/anyOf/0/properties/envFromSecret/items/anyOf/0",
                          "title": "The environment variables from secret",
                          "description": "The environment variables to retrieve from a certain secret.",
                          "type": "object",
                          "default": {},
                          "required": [
                            "secretName",
                            "envs"
                          ],
                          "properties": {
                            "secretName": {
                              "$id": "#/deployment/properties/containers/items/anyOf/0/properties/envFromSecret/properties/secretName",
                              "title": "The secret name",
                              "description": "The name of the secret to retrieve environment variables from.",
                              "type": "string",
                              "default": "",
                              "minLength": 1
                            },
                            "envs": {
                              "$id": "#/deployment/properties/containers/items/anyOf/0/properties/envFromSecret/properties/envs",
                              "title": "The environment variables",
                              "description": "The environment variables to retrieve from the secret.",
                              "type": "array",
                              "default": [],
                              "additionalItems": true,
                              "items": {
                                "$id": "#/deployment/properties/containers/items/anyOf/0/properties/envFromSecret/properties/envs/items",
                                "anyOf": [
                                  {
                                    "$id": "#/deployment/properties/containers/items/anyOf/0/properties/envFromSecret/properties/envs/items/anyOf/0",
                                    "title": "The environment variable",
                                    "description": "The environment variable to retrie from the secret.",
                                    "type": "object",
                                    "default": {},
                                    "additionalProperties": false,
                                    "required": [
                                      "name",
                                      "key"
                                    ],
                                    "properties": {
                                      "name": {
                                        "$id": "#/deployment/properties/containers/items/anyOf/0/properties/envFromSecret/properties/envs/items/anyOf/0/properties/name",
                                        "title": "The environment variable name",
                                        "description": "The name of the environment variable inside the container.",
                                        "type": "string",
                                        "default": "",
                                        "minLength": 1
                                      },
                                      "key": {
                                        "$id": "#/deployment/properties/containers/items/anyOf/0/properties/envFromSecret/properties/envs/items/anyOf/0/properties/key",
                                        "title": "The secret key",
                                        "description": "The key from the secret to retrieve the environment variable from.",
                                        "type": "string",
                                        "default": "",
                                        "minLength": 1
                                      }
                                    }
                                  }
                                ]
                              }
                            }
                          }
                        }
                      ]
                    }
                  },
                  "envFromConfigmap": {
                    "$id": "#/deployment/properties/containers/items/anyOf/0/properties/envFromConfigmap",
                    "title": "The environment variables from configMaps",
                    "description": "The environment variables to retrieve from configMaps.",
                    "type": "array",
                    "default": [],
                    "additionalItems": true,
                    "items": {
                      "$id": "#/deployment/properties/containers/items/anyOf/0/properties/envFromConfigmap/items",
                      "anyOf": [
                        {
                          "$id": "#/deployment/properties/containers/items/anyOf/0/properties/envFromConfigmap/items/anyOf/0",
                          "title": "The environment variables from configMap",
                          "description": "The environment variables to retrieve from a certain configMap.",
                          "type": "object",
                          "default": {},
                          "required": [
                            "configMapName",
                            "envs"
                          ],
                          "properties": {
                            "configMapName": {
                              "$id": "#/deployment/properties/containers/items/anyOf/0/properties/envFromConfigmap/properties/configMapName",
                              "title": "The configMap name",
                              "description": "The name of the configMap to retrieve environment variables from.",
                              "type": "string",
                              "default": "",
                              "minLength": 1
                            },
                            "envs": {
                              "$id": "#/deployment/properties/containers/items/anyOf/0/properties/envFromConfigmap/properties/envs",
                              "title": "The environment variables",
                              "description": "The environment variables to retrieve from the configMap.",
                              "type": "array",
                              "default": [],
                              "additionalItems": true,
                              "items": {
                                "$id": "#/deployment/properties/containers/items/anyOf/0/properties/envFromConfigmap/properties/envs/items",
                                "anyOf": [
                                  {
                                    "$id": "#/deployment/properties/containers/items/anyOf/0/properties/envFromConfigmap/properties/envs/items/anyOf/0",
                                    "title": "The environment variable",
                                    "description": "The environment variable to retrie from the configMap.",
                                    "type": "object",
                                    "default": {},
                                    "additionalProperties": false,
                                    "required": [
                                      "name",
                                      "key"
                                    ],
                                    "properties": {
                                      "name": {
                                        "$id": "#/deployment/properties/containers/items/anyOf/0/properties/envFromConfigmap/properties/envs/items/anyOf/0/properties/name",
                                        "title": "The environment variable name",
                                        "description": "The name of the environment variable inside the container.",
                                        "type": "string",
                                        "default": "",
                                        "minLength": 1
                                      },
                                      "key": {
                                        "$id": "#/deployment/properties/containers/items/anyOf/0/properties/envFromConfigmap/properties/envs/items/anyOf/0/properties/key",
                                        "title": "The configMap key",
                                        "description": "The key from the configMap to retrieve the environment variable from.",
                                        "type": "string",
                                        "default": "",
                                        "minLength": 1
                                      }
                                    }
                                  }
                                ]
                              }
                            }
                          }
                        }
                      ]
                    }
                  },
                  "envFromFieldRef": {
                    "$id": "#/deployment/properties/containers/items/anyOf/0/properties/envFromConfigmap",
                    "title": "The environment variables from field refs",
                    "description": "",
                    "type": "array",
                    "default": [],
                    "additionalItems": true,
                    "items": {
                      "$id": "#/deployment/properties/containers/items/anyOf/0/properties/envFromConfigmap/items",
                      "anyOf": [
                        {
                          "$id": "#/deployment/properties/containers/items/anyOf/0/properties/envFromConfigmap/items/anyOf/0",
                          "title": "The env from field ref",
                          "description": "",
                          "type": "object",
                          "default": {},
                          "additionalProperties": false,
                          "required": [
                            "name",
                            "fieldPath"
                          ],
                          "properties": {
                            "name": {
                              "$id": "#/deployment/properties/containers/items/anyOf/0/properties/envFromConfigmap/items/anyOf/0/properties/name",
                              "title": "The environment variable name",
                              "description": "",
                              "type": "string",
                              "default": "",
                              "minLength": 1
                            },
                            "fieldPath": {
                              "$id": "#/deployment/properties/containers/items/anyOf/0/properties/envFromConfigmap/items/anyOf/0/properties/fieldPath",
                              "title": "The field path",
                              "description": "",
                              "type": "string",
                              "default": "",
                              "minLength": 1
                            }
                          }
                        }
                      ]
                    }
                  },
                  "ports": {
                    "$id": "#/deployment/properties/containers/items/anyOf/0/properties/ports",
                    "title": "The container ports",
                    "description": "The container ports to forward to the outside.",
                    "type": "array",
                    "default": [],
                    "additionalItems": true,
                    "items": {
                      "$id": "#/deployment/properties/containers/items/anyOf/0/properties/ports/items",
                      "anyOf": [
                        {
                          "$id": "#/deployment/properties/containers/items/anyOf/0/properties/ports/items/anyOf/0",
                          "title": "The container port",
                          "description": "Structure of the port object.",
                          "type": "object",
                          "default": {},
                          "additionalProperties": false,
                          "required": [
                            "name",
                            "containerPort"
                          ],
                          "properties": {
                            "name": {
                              "$id": "#/deployment/properties/containers/items/anyOf/0/properties/ports/items/anyOf/0/properties/name",
                              "title": "The port name",
                              "description": "The name of the port outside of the container.",
                              "type": "string",
                              "default": "",
                              "minLength": 1
                            },
                            "containerPort": {
                              "$id": "#/deployment/properties/containers/items/anyOf/0/properties/ports/items/anyOf/0/properties/containerPort",
                              "title": "The container port",
                              "description": "The port of the container to forward outside of it.",
                              "type": "number",
                              "default": 0,
                              "minimum": 0
                            },
                            "protocol": {
                              "$id": "#/deployment/properties/containers/items/anyOf/0/properties/ports/items/anyOf/0/properties/protocol",
                              "title": "The port protocol",
                              "description": "",
                              "type": "string",
                              "default": "TCP",
                              "enum": [
                                "TCP",
                                "UDP",
                                "SCTP",
                                "HTTP"
                              ]
                            }
                          }
                        }
                      ]
                    }
                  },
                  "lifecycle": {},
                  "livenessProbe": {},
                  "readinessProbe": {},
                  "resources": {
                    "$id": "#/deployment/properties/containers/items/anyOf/0/properties/resources",
                    "title": "The container resources",
                    "description": "",
                    "type": "object",
                    "default": {},
                    "additionalProperties": false,
                    "properties": {
                      "requests": {
                        "$id": "#/deployment/properties/containers/items/anyOf/0/properties/resources/properties/requests",
                        "title": "The container resources requests",
                        "description": "The soft limit for the resources used by the container",
                        "type": "object",
                        "default": {},
                        "additionalProperties": false,
                        "properties": {
                          "cpu": {
                            "$id": "#/deployment/properties/containers/items/anyOf/0/properties/resources/properties/requests/properties/cpu",
                            "title": "The cpu limit",
                            "description": "Required to be at least 10m",
                            "type": "string",
                            "default": "100m",
                            "pattern": "^(0|[1-9][0-9]*)m$"
                          },
                          "memory": {
                            "$id": "#/deployment/properties/containers/items/anyOf/0/properties/resources/properties/requests/properties/memory",
                            "title": "The memory limit",
                            "description": "Required to be at least 10Mi",
                            "type": "string",
                            "default": "128Mi",
                            "pattern": "^(0|[1-9][0-9]*)Mi$"
                          }
                        }
                      },
                      "limits": {
                        "$id": "#/deployment/properties/containers/items/anyOf/0/properties/resources/properties/limits",
                        "title": "The container resources limits",
                        "description": "The hard limit for the resources used by the container",
                        "type": "object",
                        "default": {},
                        "additionalProperties": false,
                        "properties": {
                          "cpu": {
                            "$id": "#/deployment/properties/containers/items/anyOf/0/properties/resources/properties/requests/properties/cpu",
                            "title": "The cpu limit",
                            "description": "Required to be at least 10m",
                            "type": "string",
                            "default": "100m",
                            "pattern": "^[1-9][0-9]+m$"
                          },
                          "memory": {
                            "$id": "#/deployment/properties/containers/items/anyOf/0/properties/resources/properties/requests/properties/memory",
                            "title": "The memory limit",
                            "description": "Required to be at least 10Mi",
                            "type": "string",
                            "default": "128Mi",
                            "pattern": "^[1-9][0-9]+Mi$"
                          }
                        }
                      }
                    }
                  },
                  "volumeMounts": {
                    "$id": "#/deployment/properties/containers/items/anyOf/0/properties/volumeMounts",
                    "title": "The volume mounts",
                    "description": "The volumes to be mounted inside the container.",
                    "type": "array",
                    "default": [],
                    "additionalItems": true,
                    "items": {
                      "$id": "#/deployment/properties/containers/items/anyOf/0/properties/volumeMounts/items",
                      "anyOf": [
                        {
                          "$id": "#/deployment/properties/containers/items/anyOf/0/properties/volumeMounts/items/anyOf/0",
                          "title": "The volume mount",
                          "description": "The volume to be mounted inside the container.",
                          "type": "object",
                          "default": {},
                          "additionalProperties": false,
                          "required": [
                            "name",
                            "mountPath"
                          ],
                          "properties": {
                            "name": {
                              "$id": "#/deployment/properties/containers/items/anyOf/0/properties/volumeMounts/items/anyOf/0/properties/name",
                              "title": "The volume name",
                              "description": "The name of the volume to mount.",
                              "type": "string",
                              "default": "",
                              "minLength": 1
                            },
                            "mountPath": {
                              "$id": "#/deployment/properties/containers/items/anyOf/0/properties/volumeMounts/items/anyOf/0/properties/mountPath",
                              "title": "The mount path",
                              "description": "The path where to mount the volume inside the container.",
                              "type": "string",
                              "default": "",
                              "minLength": 1
                            },
                            "subPath": {
                              "$id": "#/deployment/properties/containers/items/anyOf/0/properties/volumeMounts/items/anyOf/0/properties/subPath",
                              "title": "The sub path",
                              "description": "The sub directory to create and use inside the persistent volume.",
                              "type": "string",
                              "default": "",
                              "minLength": 1
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              }
            ]
          }
        },
        "volumes": {
          "$id": "#/deployment/properties/volumes",
          "title": "The volumes",
          "description": "The volumes to attach.",
          "type": "array",
          "default": [],
          "additionalItems": true,
          "items": {
            "$id": "#/deployment/properties/volumes/items",
            "anyOf": [
              {
                "$id": "#/deployment/properties/volumes/items/anyOf/0",
                "title": "The volume",
                "description": "The volume attach to the deployment instance.",
                "type": "object",
                "default": {},
                "additionalProperties": true,
                "required": [
                  "name"
                ],
                "properties": {
                  "name": {
                    "$id": "#/deployment/properties/volumes/items/anyOf/0/properties/name",
                    "title": "The volume name",
                    "description": "The name of the volume.",
                    "type": "string",
                    "default": "",
                    "minLength": 1
                  },
                  "type": {
                    "$id": "#/deployment/properties/volumes/items/anyOf/0/properties/type",
                    "title": "The volume type",
                    "description": "The type of the volume.",
                    "type": "string",
                    "default": "",
                    "enum": [
                      "secret",
                      "pvc",
                      "configMap",
                      "emptyDir"
                    ]
                  },
                  "typeName": {
                    "$id": "#/deployment/properties/volumes/items/anyOf/0/properties/typeName",
                    "title": "The type name",
                    "description": "The name of the object of the specified type.",
                    "type": "string",
                    "default": "",
                    "minLength": 1
                  },
                  "items": {
                    "$id": "#/deployment/properties/volumes/items/anyOf/0/properties/items",
                    "title": "ConfigMap or secret items",
                    "description": "Array of configurations for volumes created from configMaps or secrets.",
                    "type": "array",
                    "default": [],
                    "additionalItems": true
                  },
                  "projected": {
                    "$id": "#/deployment/properties/volumes/items/anyOf/0/projected",
                    "title": "The projected volumes",
                    "description": "",
                    "type": "array",
                    "default": [],
                    "additionalItems": true,
                    "items": {
                      "$id": "#/deployment/properties/volumes/items/anyOf/0/projected/items",
                      "anyOf": [
                        {
                          "$id": "#/deployment/properties/volumes/items/anyOf/0/projected/items/anyOf/0",
                          "title": "The projected volume source",
                          "description": "",
                          "type": "object",
                          "default": {},
                          "additionalProperties": false,
                          "required": [
                            "type",
                            "typeName"
                          ],
                          "properties": {
                            "type": {
                              "$id": "#/deployment/properties/volumes/items/anyOf/0/projected/items/anyOf/0/properties/type",
                              "title": "The volume type",
                              "description": "",
                              "type": "string",
                              "default": "",
                              "enum": [
                                "secret",
                                "configMap"
                              ]
                            },
                            "typeName": {
                              "$id": "#/deployment/properties/volumes/items/anyOf/0/projected/items/anyOf/0/properties/typeName",
                              "title": "The type name",
                              "description": "The name of the object of the specified type.",
                              "type": "string",
                              "default": "",
                              "minLength": 1
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              }
            ]
          }
        }
      }
    },
    "hpa": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "$id": "#/hpa",
      "title": "The horizontal pod autoscaler",
      "description": "Schema for Kubernetes HorizontalPodAutoscaler resources",
      "type": "object",
      "default": {},
      "additionalProperties": false,
      "required": [
        "name",
        "scaleTargetRef",
        "minReplicas",
        "maxReplicas",
        "targetCPU",
        "targetMemory"
      ],
      "properties": {
        "name": {
          "title": "The hpa name",
          "description": "Name of the HorizontalPodAutoscaler resource",
          "type": "string",
          "default": "",
          "minLength": 1
        },
        "scaleTargetRef": {
          "title": "The scaled target ref",
          "description": "The target of the HPA.",
          "type": "object",
          "default": {},
          "additionalProperties": false,
          "required": [
            "kind",
            "name"
          ],
          "properties": {
            "kind": {
              "title": "The target kind",
              "description": "The kind to target with the HPA (i.e. Deployment)",
              "type": "string",
              "default": "",
              "enum": [
                "Deployment",
                "StatefulSet"
              ]
            },
            "name": {
              "title": "The target name",
              "description": "The name of the target for HPA.",
              "type": "string",
              "default": "",
              "minLength": 1
            }
          }
        },
        "minReplicas": {
          "title": "The min replicas",
          "description": "The minimum number of replicas for the HPA target.",
          "type": "integer",
          "default": 0,
          "minimum": 1,
          "maximum": 3
        },
        "maxReplicas": {
          "title": "The max replicas",
          "description": "The maximum number of replicas for the HPA target.",
          "type": "integer",
          "default": 0,
          "minimum": 2,
          "maximum": 5
        },
        "targetCPU": {
          "title": "The CPU target",
          "description": "The CPU target for each replica before firing up a new one, in percentage.",
          "type": "integer",
          "default": 0,
          "minimum": 70,
          "maximum": 100
        },
        "targetMemory": {
          "title": "The memory target",
          "description": "The memory target for each replica before firing up a new one, in percentage.",
          "type": "integer",
          "default": 0,
          "minimum": 70,
          "maximum": 100
        }
      }
    },
    "infisicalSecrets": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "$id": "#/infisicalSecrets",
      "title": "Infisical secrets definitions",
      "description": "Schema for Infisical secrets resources",
      "type": "array",
      "default": [],
      "additionalItems": true,
      "items": {
        "title": "Infisical secret",
        "description": "Configuration for an Infisical secret",
        "type": "object",
        "default": {},
        "additionalProperties": false,
        "required": [
          "name",
          "serviceTokenSecretName",
          "secretsPath",
          "secretName"
        ],
        "properties": {
          "name": {
            "title": "Resource name",
            "description": "Name of the Infisical secret resource",
            "type": "string",
            "minLength": 1
          },
          "resyncInterval": {
            "title": "Resync interval (seconds)",
            "description": "The number of seconds to wait before checking if the secret has changed",
            "type": "integer",
            "default": 60,
            "minimum": 30
          },
          "serviceTokenSecretName": {
            "title": "Service token secret name",
            "description": "The secret that contains the service token used to call the Infisical API",
            "type": "string",
            "minLength": 1
          },
          "serviceTokenSecretNamespace": {
            "title": "Service token secret namespace",
            "description": "Namespace of the service token secret",
            "type": "string",
            "default": "default",
            "minLength": 1
          },
          "env": {
            "title": "Infisical environment",
            "description": "Environment to fetch secrets from",
            "type": "string",
            "default": "prod",
            "enum": [
              "dev",
              "stg",
              "prod"
            ]
          },
          "secretsPath": {
            "title": "Infisical secrets path",
            "description": "Path to the secrets in Infisical",
            "type": "string",
            "minLength": 1
          },
          "secretName": {
            "title": "Secret name",
            "description": "The name of the secret that will contain the Infisical secret values",
            "type": "string",
            "minLength": 1
          },
          "secretType": {
            "title": "Secret type",
            "description": "Type of the Kubernetes secret",
            "type": "string",
            "default": "Opaque",
            "enum": [
              "Opaque",
              "kubernetes.io/service-account-token",
              "kubernetes.io/dockercfg",
              "kubernetes.io/dockerconfigjson",
              "kubernetes.io/basic-auth",
              "kubernetes.io/ssh-auth",
              "kubernetes.io/tls"
            ]
          }
        }
      }
    },
    "ingress": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "$id": "#/ingress",
      "title": "The ingress",
      "description": "Schema for Kubernetes Ingress resources",
      "type": "array",
      "default": [],
      "items": {
        "type": "object",
        "additionalProperties": true,
        "required": [
          "name",
          "rules"
        ],
        "properties": {
          "name": {
            "title": "Ingress name",
            "description": "Name of the Ingress resource",
            "type": "string",
            "default": "",
            "minLength": 1
          },
          "className": {
            "title": "Ingress class name",
            "description": "Name of the IngressClass resource",
            "type": "string"
          },
          "rules": {
            "title": "Ingress rules",
            "description": "List of host rules for the Ingress",
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "host"
              ],
              "properties": {
                "host": {
                  "title": "Host",
                  "description": "Host name for the rule",
                  "type": "string",
                  "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$"
                },
                "http": {
                  "title": "HTTP rules",
                  "description": "List of HTTP rules",
                  "type": "object",
                  "required": [
                    "paths"
                  ],
                  "properties": {
                    "paths": {
                      "title": "Paths",
                      "description": "List of paths for the host",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "path",
                          "pathType",
                          "backend"
                        ],
                        "properties": {
                          "path": {
                            "title": "Path",
                            "description": "Path for the rule",
                            "type": "string",
                            "pattern": "^/.*"
                          },
                          "pathType": {
                            "title": "Path type",
                            "description": "Type of path matching",
                            "type": "string",
                            "enum": [
                              "Exact",
                              "Prefix",
                              "ImplementationSpecific"
                            ],
                            "default": "Prefix"
                          },
                          "backend": {
                            "title": "Backend",
                            "description": "Backend service for the rule",
                            "type": "object",
                            "required": [
                              "service"
                            ],
                            "properties": {
                              "service": {
                                "title": "Service",
                                "description": "Service backend",
                                "type": "object",
                                "required": [
                                  "name",
                                  "port"
                                ],
                                "properties": {
                                  "name": {
                                    "title": "Service name",
                                    "description": "Name of the service",
                                    "type": "string",
                                    "minLength": 1
                                  },
                                  "port": {
                                    "title": "Service port",
                                    "description": "Port of the service",
                                    "type": [
                                      "integer",
                                      "string"
                                    ],
                                    "minimum": 1,
                                    "maximum": 65535
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "tls": {
            "title": "TLS configuration",
            "description": "TLS configuration for the Ingress",
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "hosts"
              ],
              "properties": {
                "hosts": {
                  "title": "Hosts",
                  "description": "List of hosts included in the TLS certificate",
                  "type": "array",
                  "items": {
                    "type": "string",
                    "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$"
                  }
                },
                "secretName": {
                  "title": "Secret name",
                  "description": "Name of the secret containing the TLS certificate",
                  "type": "string"
                }
              }
            }
          },
          "ingressClassName": {
            "title": "Ingress class name (deprecated)",
            "description": "Name of the IngressClass resource (deprecated, use className instead)",
            "type": "string"
          },
          "defaultBackend": {
            "title": "Default backend",
            "description": "Default backend for the Ingress",
            "type": "object",
            "required": [
              "service"
            ],
            "properties": {
              "service": {
                "title": "Service",
                "description": "Service backend",
                "type": "object",
                "required": [
                  "name",
                  "port"
                ],
                "properties": {
                  "name": {
                    "title": "Service name",
                    "description": "Name of the service",
                    "type": "string",
                    "minLength": 1
                  },
                  "port": {
                    "title": "Service port",
                    "description": "Port of the service",
                    "type": [
                      "integer",
                      "string"
                    ],
                    "minimum": 1,
                    "maximum": 65535
                  }
                }
              }
            }
          }
        }
      }
    },
    "ingresses": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "$id": "#/ingresses",
      "title": "The ingress",
      "description": "Schema for Kubernetes Ingress resources",
      "type": "array",
      "default": [],
      "items": {
        "type": "object",
        "additionalProperties": true,
        "required": [
          "name",
          "hosts"
        ],
        "properties": {
          "name": {
            "title": "Ingress name",
            "description": "Name of the Ingress resource",
            "type": "string",
            "default": "",
            "minLength": 1
          },
          "hosts": {
            "title": "Ingress hosts",
            "description": "List of hosts for the Ingress",
            "type": "array",
            "default": [],
            "additionalItems": true,
            "items": {
              "title": "Ingress host",
              "description": "The schema of an ingress host.",
              "type": "object",
              "additionalProperties": false,
              "required": [
                "host",
                "paths"
              ],
              "properties": {
                "host": {
                  "title": "Domain name",
                  "description": "Hostname for the Ingress",
                  "type": "string",
                  "default": "",
                  "minLength": 1
                },
                "paths": {
                  "title": "Paths for the host",
                  "description": "List of paths for the host",
                  "type": "array",
                  "default": [],
                  "additionalItems": true,
                  "items": {
                    "title": "Host paths",
                    "description": "Path configuration for the host",
                    "type": "object",
                    "additionalProperties": false,
                    "required": [
                      "path",
                      "pathType",
                      "serviceName",
                      "servicePort"
                    ],
                    "properties": {
                      "path": {
                        "title": "Host path",
                        "description": "Path for the host",
                        "type": "string",
                        "default": "",
                        "minLength": 1
                      },
                      "pathType": {
                        "title": "Host path type",
                        "description": "Type of path matching",
                        "type": "string",
                        "default": "",
                        "minLength": 1
                      },
                      "serviceName": {
                        "title": "Service name",
                        "description": "Name of the service to route to",
                        "type": "string",
                        "default": "",
                        "minLength": 1
                      },
                      "servicePort": {
                        "title": "Service port",
                        "description": "The port of the service where to forward the requests. This can be the name or the number of the port.",
                        "type": [
                          "string",
                          "integer"
                        ],
                        "default": "",
                        "anyOf": [
                          {
                            "title": "Service port name",
                            "description": "Name of the service port",
                            "type": "string",
                            "default": "",
                            "minLength": 1
                          },
                          {
                            "title": "Service port number",
                            "description": "Number of the service port",
                            "type": "integer",
                            "default": 0,
                            "minimum": 1
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "tls": {
            "title": "TLS reference",
            "description": "TLS configuration for the Ingress",
            "type": [
              "object",
              "null"
            ],
            "default": null,
            "additionalProperties": false,
            "required": [
              "secretName"
            ],
            "properties": {
              "secretName": {
                "title": "Secret name",
                "description": "The name of the secret that contains the TLS certificate and key.",
                "type": "string",
                "default": "",
                "minLength": 1
              }
            }
          },
          "class": {
            "title": "Ingress class",
            "description": "Ingress class to use",
            "type": "string",
            "default": "nginx",
            "minLength": 1
          }
        }
      }
    },
    "job": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "$id": "#/job",
      "title": "The job",
      "description": "Schema for Kubernetes Job resources",
      "type": "array",
      "default": [],
      "items": {
        "type": "object",
        "additionalProperties": true,
        "required": [
          "name",
          "containers"
        ],
        "properties": {
          "name": {
            "title": "Job name",
            "description": "Name of the Job resource",
            "type": "string",
            "default": "",
            "minLength": 1
          },
          "containers": {
            "title": "Job containers",
            "description": "List of containers for the Job",
            "containers": {
              "$schema": "http://json-schema.org/draft-07/schema",
              "$id": "#/containers",
              "title": "The containers schema",
              "description": "Schema for container configurations",
              "type": "array",
              "default": [],
              "additionalItems": true,
              "items": {
                "title": "The schema of a container",
                "description": "Container configuration",
                "type": "object",
                "additionalProperties": false,
                "required": [
                  "name",
                  "image",
                  "resources"
                ],
                "properties": {
                  "name": {
                    "title": "The container",
                    "description": "The name of the container to be created.",
                    "type": "string",
                    "default": "",
                    "minLength": 1
                  },
                  "image": {
                    "title": "The docker image",
                    "description": "The docker image to be used as template for the container.",
                    "type": "object",
                    "default": {},
                    "additionalProperties": false,
                    "required": [
                      "repository",
                      "tag"
                    ],
                    "properties": {
                      "repository": {
                        "title": "The docker image repository",
                        "description": "The image repository from where to pull it.",
                        "type": "string",
                        "default": "",
                        "minLength": 1
                      },
                      "tag": {
                        "title": "The docker image tag",
                        "description": "The image tag to pull (i.e. latest).",
                        "type": "string",
                        "default": "",
                        "minLength": 1
                      }
                    }
                  },
                  "imagePullPolicy": {
                    "title": "The image pull policy",
                    "description": "The image pull policy.",
                    "type": "string",
                    "default": "Always",
                    "enum": [
                      "Always",
                      "IfNotPresent",
                      "Never"
                    ]
                  },
                  "securityContext": {
                    "title": "The security context",
                    "description": "Structure of the securityContext object.",
                    "type": "object"
                  },
                  "args": {
                    "title": "The container args",
                    "description": "The arguments to pass to the container entrypoint or the command, if a command is defined.",
                    "type": "array",
                    "default": [],
                    "additionalItems": true,
                    "items": {
                      "title": "The argument",
                      "description": "Argument to be passed to the container entrypoint or command.",
                      "type": "string",
                      "default": "",
                      "minLength": 1
                    }
                  },
                  "command": {
                    "title": "The container commands",
                    "description": "The command to be executed by the container.",
                    "type": "array",
                    "default": [],
                    "additionalItems": true,
                    "items": {
                      "title": "The command",
                      "description": "Command to be executed by the container.",
                      "type": "string",
                      "default": "",
                      "minLength": 1
                    }
                  },
                  "env": {
                    "title": "The environment variables",
                    "description": "Environment variables to be passed to the container.",
                    "type": "array",
                    "default": [],
                    "additionalItems": true,
                    "items": {
                      "title": "The environment variable",
                      "description": "Structure of an environment variable.",
                      "type": "object",
                      "default": {},
                      "additionalProperties": false,
                      "required": [
                        "name",
                        "value"
                      ],
                      "properties": {
                        "name": {
                          "title": "The environment variable",
                          "description": "The name of the environment variable.",
                          "type": "string",
                          "default": "",
                          "minLength": 1
                        },
                        "value": {
                          "title": "The environment variable value",
                          "description": "The value of the environment variable.",
                          "type": "string",
                          "default": "",
                          "minLength": 1
                        }
                      }
                    }
                  },
                  "envFromSecret": {
                    "title": "The environment variables from secrets",
                    "description": "The environment variables to retrieve from secrets.",
                    "type": "array",
                    "default": [],
                    "additionalItems": true,
                    "items": {
                      "title": "The environment variables from secret",
                      "description": "The environment variables to retrieve from a certain secret.",
                      "type": "object",
                      "default": {},
                      "required": [
                        "secretName",
                        "envs"
                      ],
                      "properties": {
                        "secretName": {
                          "title": "The secret name",
                          "description": "The name of the secret to retrieve environment variables from.",
                          "type": "string",
                          "default": "",
                          "minLength": 1
                        },
                        "envs": {
                          "title": "The environment variables",
                          "description": "The environment variables to retrieve from the secret.",
                          "type": "array",
                          "default": [],
                          "additionalItems": true,
                          "items": {
                            "title": "The environment variable",
                            "description": "The environment variable to retrie from the secret.",
                            "type": "object",
                            "default": {},
                            "additionalProperties": false,
                            "required": [
                              "name",
                              "key"
                            ],
                            "properties": {
                              "name": {
                                "title": "The environment variable name",
                                "description": "The name of the environment variable inside the container.",
                                "type": "string",
                                "default": "",
                                "minLength": 1
                              },
                              "key": {
                                "title": "The secret key",
                                "description": "The key from the secret to retrieve the environment variable from.",
                                "type": "string",
                                "default": "",
                                "minLength": 1
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "envFromConfigmap": {
                    "title": "The environment variables from configMaps",
                    "description": "The environment variables to retrieve from configMaps.",
                    "type": "array",
                    "default": [],
                    "additionalItems": true,
                    "items": {
                      "title": "The environment variables from configMap",
                      "description": "The environment variables to retrieve from a certain configMap.",
                      "type": "object",
                      "default": {},
                      "required": [
                        "configMapName",
                        "envs"
                      ],
                      "properties": {
                        "configMapName": {
                          "title": "The configMap name",
                          "description": "The name of the configMap to retrieve environment variables from.",
                          "type": "string",
                          "default": "",
                          "minLength": 1
                        },
                        "envs": {
                          "title": "The environment variables",
                          "description": "The environment variables to retrieve from the configMap.",
                          "type": "array",
                          "default": [],
                          "additionalItems": true,
                          "items": {
                            "title": "The environment variable",
                            "description": "The environment variable to retrie from the configMap.",
                            "type": "object",
                            "default": {},
                            "additionalProperties": false,
                            "required": [
                              "name",
                              "key"
                            ],
                            "properties": {
                              "name": {
                                "title": "The environment variable name",
                                "description": "The name of the environment variable inside the container.",
                                "type": "string",
                                "default": "",
                                "minLength": 1
                              },
                              "key": {
                                "title": "The configMap key",
                                "description": "The key from the configMap to retrieve the environment variable from.",
                                "type": "string",
                                "default": "",
                                "minLength": 1
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "envFromFieldRef": {
                    "title": "The environment variables from field refs",
                    "description": "Environment variables from field references",
                    "type": "array",
                    "default": [],
                    "additionalItems": true,
                    "items": {
                      "title": "The env from field ref",
                      "description": "Environment variable from field reference",
                      "type": "object",
                      "default": {},
                      "additionalProperties": false,
                      "required": [
                        "name",
                        "fieldPath"
                      ],
                      "properties": {
                        "name": {
                          "title": "The environment variable name",
                          "description": "Name of the environment variable",
                          "type": "string",
                          "default": "",
                          "minLength": 1
                        },
                        "fieldPath": {
                          "title": "The field path",
                          "description": "Path to the field to reference",
                          "type": "string",
                          "default": "",
                          "minLength": 1
                        }
                      }
                    }
                  },
                  "ports": {
                    "title": "The container ports",
                    "description": "The container ports to forward to the outside.",
                    "type": "array",
                    "default": [],
                    "additionalItems": true,
                    "items": {
                      "title": "The container port",
                      "description": "Structure of the port object.",
                      "type": "object",
                      "default": {},
                      "additionalProperties": false,
                      "required": [
                        "name",
                        "containerPort"
                      ],
                      "properties": {
                        "name": {
                          "title": "The port name",
                          "description": "The name of the port outside of the container.",
                          "type": "string",
                          "default": "",
                          "minLength": 1
                        },
                        "containerPort": {
                          "title": "The container port",
                          "description": "The port of the container to forward outside of it.",
                          "type": "number",
                          "default": 0,
                          "minimum": 0
                        },
                        "protocol": {
                          "title": "The port protocol",
                          "description": "Protocol for the port",
                          "type": "string",
                          "default": "TCP",
                          "enum": [
                            "TCP",
                            "UDP",
                            "SCTP",
                            "HTTP"
                          ]
                        }
                      }
                    }
                  },
                  "lifecycle": {},
                  "livenessProbe": {},
                  "readinessProbe": {},
                  "resources": {
                    "title": "The container resources",
                    "description": "Resource requirements and limits",
                    "type": "object",
                    "default": {},
                    "additionalProperties": false,
                    "properties": {
                      "requests": {
                        "title": "The container resources requests",
                        "description": "The soft limit for the resources used by the container",
                        "type": "object",
                        "default": {},
                        "additionalProperties": false,
                        "properties": {
                          "cpu": {
                            "title": "The cpu limit",
                            "description": "Required to be at least 10m",
                            "type": "string",
                            "default": "100m",
                            "pattern": "^(0|[1-9][0-9]*)m$"
                          },
                          "memory": {
                            "title": "The memory limit",
                            "description": "Required to be at least 10Mi",
                            "type": "string",
                            "default": "128Mi",
                            "pattern": "^(0|[1-9][0-9]*)Mi$"
                          }
                        }
                      },
                      "limits": {
                        "title": "The container resources limits",
                        "description": "The hard limit for the resources used by the container",
                        "type": "object",
                        "default": {},
                        "additionalProperties": false,
                        "properties": {
                          "cpu": {
                            "title": "The cpu limit",
                            "description": "Required to be at least 10m",
                            "type": "string",
                            "default": "100m",
                            "pattern": "^[1-9][0-9]+m$"
                          },
                          "memory": {
                            "title": "The memory limit",
                            "description": "Required to be at least 10Mi",
                            "type": "string",
                            "default": "128Mi",
                            "pattern": "^[1-9][0-9]+Mi$"
                          }
                        }
                      }
                    }
                  },
                  "volumeMounts": {
                    "title": "The volume mounts",
                    "description": "The volumes to be mounted inside the container.",
                    "type": "array",
                    "default": [],
                    "additionalItems": true,
                    "items": {
                      "title": "The volume mount",
                      "description": "The volume to be mounted inside the container.",
                      "type": "object",
                      "default": {},
                      "additionalProperties": false,
                      "required": [
                        "name",
                        "mountPath"
                      ],
                      "properties": {
                        "name": {
                          "title": "The volume name",
                          "description": "The name of the volume to mount.",
                          "type": "string",
                          "default": "",
                          "minLength": 1
                        },
                        "mountPath": {
                          "title": "The mount path",
                          "description": "The path where to mount the volume inside the container.",
                          "type": "string",
                          "default": "",
                          "minLength": 1
                        },
                        "subPath": {
                          "title": "The sub path",
                          "description": "The sub directory to create and use inside the persistent volume.",
                          "type": "string",
                          "default": "",
                          "minLength": 1
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "volumes": {
            "title": "Job volumes",
            "description": "List of volumes for the Job",
            "volumes": {
              "$schema": "http://json-schema.org/draft-07/schema",
              "$id": "#/volumes",
              "title": "The volumes",
              "description": "Schema for Kubernetes Volume resources",
              "type": "array",
              "default": [],
              "items": {
                "type": "object",
                "additionalProperties": true,
                "required": [
                  "name",
                  "type"
                ],
                "properties": {
                  "name": {
                    "title": "Volume name",
                    "description": "Name of the volume",
                    "type": "string",
                    "default": "",
                    "minLength": 1
                  },
                  "type": {
                    "title": "Volume type",
                    "description": "Type of the volume",
                    "type": "string",
                    "enum": [
                      "emptyDir",
                      "configMap",
                      "secret",
                      "persistentVolumeClaim",
                      "hostPath"
                    ]
                  },
                  "configMap": {
                    "title": "ConfigMap volume",
                    "description": "ConfigMap volume configuration",
                    "type": "object",
                    "required": [
                      "name"
                    ],
                    "properties": {
                      "name": {
                        "title": "ConfigMap name",
                        "description": "Name of the ConfigMap",
                        "type": "string",
                        "minLength": 1
                      },
                      "items": {
                        "title": "ConfigMap items",
                        "description": "Items to project from the ConfigMap",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": [
                            "key",
                            "path"
                          ],
                          "properties": {
                            "key": {
                              "title": "ConfigMap key",
                              "description": "Key to project",
                              "type": "string",
                              "minLength": 1
                            },
                            "path": {
                              "title": "Mount path",
                              "description": "Path to mount the key at",
                              "type": "string",
                              "minLength": 1
                            }
                          }
                        }
                      }
                    }
                  },
                  "secret": {
                    "title": "Secret volume",
                    "description": "Secret volume configuration",
                    "type": "object",
                    "required": [
                      "secretName"
                    ],
                    "properties": {
                      "secretName": {
                        "title": "Secret name",
                        "description": "Name of the Secret",
                        "type": "string",
                        "minLength": 1
                      },
                      "items": {
                        "title": "Secret items",
                        "description": "Items to project from the Secret",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": [
                            "key",
                            "path"
                          ],
                          "properties": {
                            "key": {
                              "title": "Secret key",
                              "description": "Key to project",
                              "type": "string",
                              "minLength": 1
                            },
                            "path": {
                              "title": "Mount path",
                              "description": "Path to mount the key at",
                              "type": "string",
                              "minLength": 1
                            }
                          }
                        }
                      }
                    }
                  },
                  "persistentVolumeClaim": {
                    "title": "PersistentVolumeClaim volume",
                    "description": "PersistentVolumeClaim volume configuration",
                    "type": "object",
                    "required": [
                      "claimName"
                    ],
                    "properties": {
                      "claimName": {
                        "title": "PVC name",
                        "description": "Name of the PersistentVolumeClaim",
                        "type": "string",
                        "minLength": 1
                      }
                    }
                  },
                  "hostPath": {
                    "title": "HostPath volume",
                    "description": "HostPath volume configuration",
                    "type": "object",
                    "required": [
                      "path"
                    ],
                    "properties": {
                      "path": {
                        "title": "Host path",
                        "description": "Path on the host",
                        "type": "string",
                        "minLength": 1
                      },
                      "type": {
                        "title": "HostPath type",
                        "description": "Type of the host path",
                        "type": "string",
                        "enum": [
                          "Directory",
                          "DirectoryOrCreate",
                          "File",
                          "FileOrCreate",
                          "Socket",
                          "CharDevice",
                          "BlockDevice"
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "restartPolicy": {
            "title": "Restart policy",
            "description": "Restart policy for the Job",
            "type": "string",
            "default": "Never",
            "enum": [
              "Never",
              "OnFailure"
            ]
          },
          "backoffLimit": {
            "title": "Backoff limit",
            "description": "Number of retries before marking the job as failed",
            "type": "integer",
            "default": 6,
            "minimum": 0
          },
          "activeDeadlineSeconds": {
            "title": "Active deadline seconds",
            "description": "Maximum time a job can run before being terminated",
            "type": "integer",
            "default": null,
            "minimum": 1
          },
          "parallelism": {
            "title": "Parallelism",
            "description": "Number of pods to run in parallel",
            "type": "integer",
            "default": 1,
            "minimum": 1
          },
          "completions": {
            "title": "Completions",
            "description": "Number of successful pod completions required",
            "type": "integer",
            "default": 1,
            "minimum": 1
          },
          "ttlSecondsAfterFinished": {
            "title": "TTL seconds after finished",
            "description": "Time to live for completed jobs",
            "type": "integer",
            "default": null,
            "minimum": 0
          }
        }
      }
    },
    "pvs": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "$id": "#/pvs",
      "title": "The persistent volumes",
      "description": "The persistent volumes to create.",
      "type": "array",
      "default": [],
      "items": {
        "$id": "#/items",
        "title": "The persistent volume",
        "description": "The schema of a persistent volume.",
        "type": "object",
        "additionalProperties": false,
        "required": [
          "name",
          "storageClassName",
          "size",
          "accessModes",
          "hostPath"
        ],
        "properties": {
          "name": {
            "$id": "#/items/properties/name",
            "title": "PV name",
            "description": "",
            "type": "string",
            "default": "",
            "minLength": 1
          },
          "storageClassName": {
            "$id": "#/items/properties/storageClassName",
            "title": "Storage class name",
            "description": "",
            "type": "string",
            "default": "",
            "minLength": 1
          },
          "size": {
            "$id": "#/items/properties/size",
            "title": "Size of the persistent volume",
            "description": "",
            "type": "string",
            "default": "",
            "minLength": 1
          },
          "accessModes": {
            "$id": "#/items/properties/accessModes",
            "title": "Access modes",
            "description": "",
            "type": "array",
            "default": [],
            "additionalItems": true,
            "items": {
              "type": "string",
              "minLength": 1
            }
          },
          "hostPath": {
            "$id": "#/items/properties/hostPath",
            "title": "Host path",
            "description": "",
            "type": "string",
            "default": "",
            "minLength": 1
          }
        }
      }
    },
    "pvcs": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "$id": "#/pvcs",
      "title": "The persistent volume claims",
      "description": "",
      "type": "array",
      "default": [],
      "items": {
        "$id": "#/items",
        "title": "The persistent volume claim",
        "description": "The schema of a PVC.",
        "type": "object",
        "additionalProperties": false,
        "required": [
          "name",
          "storageClassName",
          "accessModes",
          "size"
        ],
        "properties": {
          "name": {
            "$id": "#/items/properties/name",
            "title": "PVC name",
            "description": "",
            "type": "string",
            "default": "",
            "minLength": 1
          },
          "storageClassName": {
            "$id": "#/items/properties/storageClassName",
            "title": "Storage class name",
            "description": "",
            "type": "string",
            "default": "",
            "minLength": 1
          },
          "accessModes": {
            "$id": "#/items/properties/accessModes",
            "title": "Access modes",
            "description": "",
            "type": "array",
            "default": [],
            "additionalItems": true,
            "items": {
              "type": "string",
              "minLength": 1
            }
          },
          "size": {
            "$id": "#/items/properties/size",
            "title": "Requested size",
            "description": "The size requested from the persistent volume",
            "type": "string",
            "default": "",
            "minLength": 1
          },
          "volumeMode": {
            "$id": "#/items/properties/volumeMode",
            "title": "Volume mode",
            "description": "",
            "type": "string",
            "default": "Filesystem",
            "enum": [
              "Block",
              "Filesystem"
            ]
          }
        }
      }
    },
    "role": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "$id": "#/clusterRole",
      "title": "The cluster role",
      "description": "Schema for Kubernetes ClusterRole resources",
      "type": "object",
      "default": {},
      "additionalProperties": false,
      "required": [
        "name",
        "rules"
      ],
      "properties": {
        "name": {
          "title": "The name of the cluster role",
          "description": "Name of the ClusterRole resource",
          "type": "string",
          "default": "",
          "minLength": 1
        },
        "rules": {
          "title": "The service account rules",
          "description": "List of rules that define the permissions",
          "type": "array",
          "default": [],
          "additionalItems": true,
          "items": {
            "type": "object",
            "default": {},
            "additionalProperties": false,
            "required": [
              "apiGroups",
              "resources",
              "verbs"
            ],
            "properties": {
              "apiGroups": {
                "title": "The api groups to get access for",
                "description": "List of API groups this rule applies to",
                "type": "array",
                "default": [],
                "additionalItems": true,
                "items": {
                  "type": "string",
                  "default": ""
                }
              },
              "resources": {
                "title": "The resources to get access for",
                "description": "List of resources this rule applies to",
                "type": "array",
                "default": [],
                "additionalItems": true,
                "items": {
                  "type": "string",
                  "default": "",
                  "minLength": 1
                }
              },
              "verbs": {
                "title": "The verbs to get access for",
                "description": "List of verbs this rule applies to",
                "type": "array",
                "default": [],
                "additionalItems": true,
                "items": {
                  "type": "string",
                  "default": "",
                  "minLength": 1
                }
              }
            }
          }
        }
      }
    },
    "roleBinding": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "$id": "#/roleBinding",
      "title": "The role binding",
      "description": "Describes a binding between a role and a service account",
      "type": "object",
      "default": {},
      "additionalProperties": false,
      "required": [
        "name",
        "roleName",
        "serviceAccountName"
      ],
      "properties": {
        "name": {
          "$id": "#/properties/name",
          "title": "The binding name",
          "description": "",
          "type": "string",
          "default": "",
          "minLength": 1
        },
        "roleName": {
          "$id": "#/properties/roleName",
          "title": "The role name to bind",
          "description": "",
          "type": "string",
          "default": "",
          "minLength": 1
        },
        "serviceAccountName": {
          "$id": "#/properties/serviceAccountName",
          "title": "The service account name to bind",
          "description": "",
          "type": "string",
          "default": "",
          "minLength": 1
        }
      }
    },
    "secrets": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "$id": "#/secrets",
      "title": "The secrets",
      "description": "",
      "type": "array",
      "default": [],
      "additionalItems": true,
      "items": {
        "$id": "#/items",
        "title": "The secret",
        "description": "The schema of a secret.",
        "type": "object",
        "default": {},
        "additionalProperties": true,
        "required": [
          "name"
        ],
        "properties": {
          "name": {
            "$id": "#/items/properties/name",
            "title": "The name of the secret",
            "description": "",
            "type": "string",
            "default": "",
            "minLength": 1
          },
          "type": {
            "$id": "#/items/properties/type",
            "title": "The type of the secret",
            "description": "",
            "type": "string",
            "default": "Opaque",
            "enum": [
              "Opaque",
              "kubernetes.io/service-account-token",
              "kubernetes.io/dockercfg",
              "kubernetes.io/dockerconfigjson",
              "kubernetes.io/basic-auth",
              "kubernetes.io/ssh-auth",
              "kubernetes.io/tls"
            ]
          },
          "data": {
            "$id": "#/items/properties/data",
            "title": "The data of the secret",
            "description": "",
            "type": "object",
            "default": {},
            "additionalProperties": true,
            "patternProperties": {
              "^[A-Za-z\\._-][A-Za-z0-9\\._-]*$": {
                "$id": "#/items/properties/data/patternProperties",
                "title": "The key-value pair for the secret",
                "description": "",
                "type": "string",
                "default": "",
                "minLength": 1
              }
            }
          }
        }
      }
    },
    "serviceAccount": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "$id": "#/serviceAccount",
      "title": "The serviceAccount",
      "description": "",
      "type": "object",
      "default": {},
      "additionalProperties": true,
      "required": [
        "name"
      ],
      "properties": {
        "name": {
          "$id": "#/properties/name",
          "title": "The name of the service account",
          "description": "",
          "type": "string",
          "default": "",
          "minLength": 1
        },
        "annotations": {
          "$id": "#/properties/annotations",
          "title": "The annotations of the service account",
          "description": "",
          "type": "object",
          "default": {},
          "additionalProperties": true,
          "patternProperties": {
            "^[A-Za-z\\._-][A-Za-z0-9\\._-]*$": {
              "$id": "#/properties/annotations/patternProperties",
              "title": "The key-value pair for the annotation",
              "description": "",
              "type": "string",
              "default": "",
              "minLength": 1
            }
          }
        },
        "imagePullSecrets": {
          "$id": "#/properties/imagePullSecrets",
          "title": "The image pull secrets of the service account",
          "description": "",
          "type": "array",
          "default": [],
          "additionalItems": true,
          "items": {
            "$id": "#/properties/imagePullSecrets/items",
            "title": "The image pull secret",
            "description": "",
            "type": "object",
            "default": {},
            "additionalProperties": true,
            "required": [
              "name"
            ],
            "properties": {
              "name": {
                "$id": "#/properties/imagePullSecrets/items/properties/name",
                "title": "The name of the image pull secret",
                "description": "",
                "type": "string",
                "default": "",
                "minLength": 1
              }
            }
          }
        }
      }
    },
    "services": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "$id": "#/service",
      "title": "The service",
      "description": "Schema for Kubernetes Service resources",
      "type": "array",
      "default": [],
      "items": {
        "type": "object",
        "additionalProperties": true,
        "required": [
          "name",
          "ports"
        ],
        "properties": {
          "name": {
            "title": "Service name",
            "description": "Name of the Service resource",
            "type": "string",
            "default": "",
            "minLength": 1
          },
          "type": {
            "title": "Service type",
            "description": "Type of Service",
            "type": "string",
            "enum": [
              "ClusterIP",
              "NodePort",
              "LoadBalancer",
              "ExternalName"
            ],
            "default": "ClusterIP"
          },
          "ports": {
            "title": "Service ports",
            "description": "List of ports exposed by the service",
            "type": "array",
            "default": [],
            "items": {
              "type": "object",
              "required": [
                "port"
              ],
              "properties": {
                "name": {
                  "title": "Port name",
                  "description": "Name of the port",
                  "type": "string",
                  "minLength": 1
                },
                "port": {
                  "title": "Port number",
                  "description": "Port number exposed by the service",
                  "type": "integer",
                  "minimum": 1,
                  "maximum": 65535
                },
                "targetPort": {
                  "title": "Target port",
                  "description": "Port number of the target pod",
                  "type": [
                    "integer",
                    "string"
                  ],
                  "minimum": 1,
                  "maximum": 65535
                },
                "protocol": {
                  "title": "Protocol",
                  "description": "Protocol for the port",
                  "type": "string",
                  "enum": [
                    "TCP",
                    "UDP",
                    "SCTP"
                  ],
                  "default": "TCP"
                },
                "nodePort": {
                  "title": "Node port",
                  "description": "Port exposed on each node (for NodePort type)",
                  "type": "integer",
                  "minimum": 30000,
                  "maximum": 32767
                }
              }
            }
          },
          "selector": {
            "title": "Service selector",
            "description": "Label selector for pods",
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "clusterIP": {
            "title": "Cluster IP",
            "description": "ClusterIP address to assign to the service",
            "type": "string",
            "pattern": "^((25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$|^$"
          },
          "externalIPs": {
            "title": "External IPs",
            "description": "List of external IP addresses",
            "type": "array",
            "items": {
              "type": "string",
              "pattern": "^((25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$"
            }
          },
          "externalName": {
            "title": "External name",
            "description": "External name for ExternalName type service",
            "type": "string"
          },
          "sessionAffinity": {
            "title": "Session affinity",
            "description": "Session affinity type",
            "type": "string",
            "enum": [
              "None",
              "ClientIP"
            ],
            "default": "None"
          },
          "sessionAffinityConfig": {
            "title": "Session affinity config",
            "description": "Configuration for session affinity",
            "type": "object",
            "properties": {
              "clientIP": {
                "title": "Client IP timeout",
                "description": "Timeout for client IP based session affinity",
                "type": "object",
                "properties": {
                  "timeoutSeconds": {
                    "title": "Timeout seconds",
                    "description": "Number of seconds the session stays active",
                    "type": "integer",
                    "minimum": 1,
                    "default": 10800
                  }
                }
              }
            }
          }
        }
      }
    },
    "statefulSet": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "$id": "#/statefulSet",
      "title": "StatefulSet Schema",
      "description": "Schema for defining Kubernetes StatefulSets",
      "type": "object",
      "default": {},
      "additionalProperties": false,
      "required": [
        "serviceName",
        "containers"
      ],
      "properties": {
        "annotations": {},
        "serviceName": {
          "$id": "#/statefulSet/properties/serviceName",
          "title": "The name of the service that governs this StatefulSet",
          "description": "",
          "type": "string",
          "default": "",
          "minLength": 1
        },
        "replicas": {
          "$id": "#/statefulSet/properties/replicas",
          "title": "The replicas count",
          "description": "The number of replicas for this deployment",
          "type": "integer",
          "default": 0,
          "minimum": 0,
          "maximum": 5
        },
        "serviceAccountName": {
          "$id": "#/statefulSet/properties/serviceAccountName",
          "title": "The service account name",
          "description": "",
          "type": "string",
          "default": "",
          "minLength": 1
        },
        "securityContext": {
          "$id": "#/statefulSet/properties/securityContext",
          "title": "The security context",
          "description": "Structue of the securityContext object.",
          "type": "object"
        },
        "imagePullSecrets": {
          "$id": "#/statefulSet/properties/imagePullSecrets",
          "title": "The image pull secrets",
          "description": "The secrets used to pull images from private registries.",
          "type": "array",
          "default": [],
          "additionalItems": true,
          "items": {
            "$id": "#/deployment/properties/imagePullSecrets/items",
            "anyOf": [
              {
                "$id": "#/deployment/properties/imagePullSecrets/items/anyOf/0",
                "title": "The image pull secret",
                "description": "The secret used to pull images from private registries.",
                "type": "object",
                "default": {},
                "additionalProperties": false,
                "required": [
                  "name"
                ],
                "properties": {
                  "name": {
                    "$id": "#/deployment/properties/imagePullSecrets/items/anyOf/0/properties/name",
                    "title": "The image pull secret name",
                    "description": "The image pull secret name.",
                    "type": "string",
                    "default": "",
                    "minLength": 1
                  }
                }
              }
            ]
          }
        },
        "terminationGracePeriodSeconds": {
          "$id": "#/statefulSet/properties/terminationGracePeriodSeconds",
          "title": "The schema of terminationGracePeriodSeconds",
          "description": "The amount of seconds to wait before forcefully stopping the pod after entering the Terminating state.",
          "type": "integer",
          "default": 0
        },
        "initContainers": {
          "$id": "#/statefulSet/properties/initContainers",
          "title": "The schema of init containers",
          "description": "",
          "type": "array",
          "default": [],
          "additionalItems": true,
          "items": {
            "$id": "#/deployment/properties/containers/items",
            "anyOf": [
              {
                "$id": "#/deployment/properties/containers/items/anyOf/0",
                "title": "The schema of a container",
                "description": "",
                "type": "object",
                "additionalProperties": false,
                "required": [
                  "name",
                  "image",
                  "resources"
                ],
                "properties": {
                  "name": {
                    "$id": "#/properties/configMaps/items/anyOf/0/properties/name",
                    "title": "The container",
                    "description": "The name of the container to be created.",
                    "type": "string",
                    "default": "",
                    "minLength": 1
                  },
                  "image": {
                    "$id": "#/deployment/properties/items/anyOf/0/properties/image",
                    "title": "The docker image",
                    "description": "The docker image to be used as template for the container.",
                    "type": "object",
                    "default": {},
                    "additionalProperties": false,
                    "required": [
                      "repository",
                      "tag"
                    ],
                    "properties": {
                      "repository": {
                        "$id": "#/properties/configMaps/items/anyOf/0/properties/image/properties/repository",
                        "title": "The docker image repository",
                        "description": "The image repository from where to pull it.",
                        "type": "string",
                        "default": "",
                        "minLength": 1
                      },
                      "tag": {
                        "$id": "#/properties/configMaps/items/anyOf/0/properties/image/properties/tag",
                        "title": "The docker image tag",
                        "description": "The image tag to pull (i.e. latest).",
                        "type": "string",
                        "default": "",
                        "minLength": 1
                      }
                    }
                  },
                  "imagePullPolicy": {
                    "$id": "#/deployment/properties/containers/items/anyOf/0/properties/imagePullPolicy",
                    "title": "The image pull policy",
                    "description": "The image pull policy.",
                    "type": "string",
                    "default": "Always",
                    "enum": [
                      "Always",
                      "IfNotPresent",
                      "Never"
                    ]
                  },
                  "securityContext": {
                    "$id": "#/deployment/properties/containers/items/anyOf/0/properties/securityContext",
                    "title": "The security context",
                    "description": "Structue of the securityContext object.",
                    "type": "object"
                  },
                  "args": {
                    "$id": "#/deployment/properties/containers/items/anyOf/0/properties/args",
                    "title": "The container args",
                    "description": "The arguments to pass to the container entrypoint or the command, if a command is defined.",
                    "type": "array",
                    "default": [],
                    "additionalItems": true,
                    "items": {
                      "$id": "#/deployment/properties/containers/items/anyOf/0/properties/args/items",
                      "anyOf": [
                        {
                          "$id": "#/deployment/properties/containers/items/anyOf/0/properties/args/items/anyOf/0",
                          "title": "The argument",
                          "description": "Argument to be passed to the container entrypoint or command.",
                          "type": "string",
                          "default": "",
                          "minLength": 1
                        }
                      ]
                    }
                  },
                  "command": {
                    "$id": "#/deployment/properties/containers/items/anyOf/0/properties/command",
                    "title": "The conainter commands",
                    "description": "The command to be executed by the container.",
                    "type": "array",
                    "default": [],
                    "additionalItems": true,
                    "items": {
                      "$id": "#/deployment/properties/containers/items/anyOf/0/properties/command/items",
                      "anyOf": [
                        {
                          "$id": "#/deployment/properties/containers/items/anyOf/0/properties/command/items/anyOf/0",
                          "title": "The command",
                          "description": "Command to be executed by the container.",
                          "type": "string",
                          "default": "",
                          "minLength": 1
                        }
                      ]
                    }
                  },
                  "env": {
                    "$id": "#/deployment/properties/containers/items/anyOf/0/properties/env",
                    "title": "The environment variables",
                    "description": "Environment variables to be passed to the container.",
                    "type": "array",
                    "default": [],
                    "additionalItems": true,
                    "items": {
                      "$id": "#/deployment/properties/containers/items/anyOf/0/properties/env/items",
                      "anyOf": [
                        {
                          "$id": "#/deployment/properties/containers/items/anyOf/0/properties/env/items/anyOf/0",
                          "title": "The environment variable",
                          "description": "Structure of an environment variable.",
                          "type": "object",
                          "default": {},
                          "additionalProperties": false,
                          "required": [
                            "name",
                            "value"
                          ],
                          "properties": {
                            "name": {
                              "$id": "#/deployment/properties/containers/items/anyOf/0/properties/env/items/anyOf/0/properties/name",
                              "title": "The environment variable",
                              "description": "The name of the environment variable.",
                              "type": "string",
                              "default": "",
                              "minLength": 1
                            },
                            "value": {
                              "$id": "#/deployment/properties/containers/items/anyOf/0/properties/env/items/anyOf/0/properties/value",
                              "title": "The environment variable value",
                              "description": "The value of the environment variable.",
                              "type": "string",
                              "default": "",
                              "minLength": 1
                            }
                          }
                        }
                      ]
                    }
                  },
                  "envFromSecret": {
                    "$id": "#/deployment/properties/containers/items/anyOf/0/properties/envFromSecret",
                    "title": "The environment variables from secrets",
                    "description": "The environment variables to retrieve from secrets.",
                    "type": "array",
                    "default": [],
                    "additionalItems": true,
                    "items": {
                      "$id": "#/deployment/properties/containers/items/anyOf/0/properties/envFromSecret/items",
                      "anyOf": [
                        {
                          "$id": "#/deployment/properties/containers/items/anyOf/0/properties/envFromSecret/items/anyOf/0",
                          "title": "The environment variables from secret",
                          "description": "The environment variables to retrieve from a certain secret.",
                          "type": "object",
                          "default": {},
                          "required": [
                            "secretName",
                            "envs"
                          ],
                          "properties": {
                            "secretName": {
                              "$id": "#/deployment/properties/containers/items/anyOf/0/properties/envFromSecret/properties/secretName",
                              "title": "The secret name",
                              "description": "The name of the secret to retrieve environment variables from.",
                              "type": "string",
                              "default": "",
                              "minLength": 1
                            },
                            "envs": {
                              "$id": "#/deployment/properties/containers/items/anyOf/0/properties/envFromSecret/properties/envs",
                              "title": "The environment variables",
                              "description": "The environment variables to retrieve from the secret.",
                              "type": "array",
                              "default": [],
                              "additionalItems": true,
                              "items": {
                                "$id": "#/deployment/properties/containers/items/anyOf/0/properties/envFromSecret/properties/envs/items",
                                "anyOf": [
                                  {
                                    "$id": "#/deployment/properties/containers/items/anyOf/0/properties/envFromSecret/properties/envs/items/anyOf/0",
                                    "title": "The environment variable",
                                    "description": "The environment variable to retrie from the secret.",
                                    "type": "object",
                                    "default": {},
                                    "additionalProperties": false,
                                    "required": [
                                      "name",
                                      "key"
                                    ],
                                    "properties": {
                                      "name": {
                                        "$id": "#/deployment/properties/containers/items/anyOf/0/properties/envFromSecret/properties/envs/items/anyOf/0/properties/name",
                                        "title": "The environment variable name",
                                        "description": "The name of the environment variable inside the container.",
                                        "type": "string",
                                        "default": "",
                                        "minLength": 1
                                      },
                                      "key": {
                                        "$id": "#/deployment/properties/containers/items/anyOf/0/properties/envFromSecret/properties/envs/items/anyOf/0/properties/key",
                                        "title": "The secret key",
                                        "description": "The key from the secret to retrieve the environment variable from.",
                                        "type": "string",
                                        "default": "",
                                        "minLength": 1
                                      }
                                    }
                                  }
                                ]
                              }
                            }
                          }
                        }
                      ]
                    }
                  },
                  "envFromConfigmap": {
                    "$id": "#/deployment/properties/containers/items/anyOf/0/properties/envFromConfigmap",
                    "title": "The environment variables from configMaps",
                    "description": "The environment variables to retrieve from configMaps.",
                    "type": "array",
                    "default": [],
                    "additionalItems": true,
                    "items": {
                      "$id": "#/deployment/properties/containers/items/anyOf/0/properties/envFromConfigmap/items",
                      "anyOf": [
                        {
                          "$id": "#/deployment/properties/containers/items/anyOf/0/properties/envFromConfigmap/items/anyOf/0",
                          "title": "The environment variables from configMap",
                          "description": "The environment variables to retrieve from a certain configMap.",
                          "type": "object",
                          "default": {},
                          "required": [
                            "configMapName",
                            "envs"
                          ],
                          "properties": {
                            "configMapName": {
                              "$id": "#/deployment/properties/containers/items/anyOf/0/properties/envFromConfigmap/properties/configMapName",
                              "title": "The configMap name",
                              "description": "The name of the configMap to retrieve environment variables from.",
                              "type": "string",
                              "default": "",
                              "minLength": 1
                            },
                            "envs": {
                              "$id": "#/deployment/properties/containers/items/anyOf/0/properties/envFromConfigmap/properties/envs",
                              "title": "The environment variables",
                              "description": "The environment variables to retrieve from the configMap.",
                              "type": "array",
                              "default": [],
                              "additionalItems": true,
                              "items": {
                                "$id": "#/deployment/properties/containers/items/anyOf/0/properties/envFromConfigmap/properties/envs/items",
                                "anyOf": [
                                  {
                                    "$id": "#/deployment/properties/containers/items/anyOf/0/properties/envFromConfigmap/properties/envs/items/anyOf/0",
                                    "title": "The environment variable",
                                    "description": "The environment variable to retrie from the configMap.",
                                    "type": "object",
                                    "default": {},
                                    "additionalProperties": false,
                                    "required": [
                                      "name",
                                      "key"
                                    ],
                                    "properties": {
                                      "name": {
                                        "$id": "#/deployment/properties/containers/items/anyOf/0/properties/envFromConfigmap/properties/envs/items/anyOf/0/properties/name",
                                        "title": "The environment variable name",
                                        "description": "The name of the environment variable inside the container.",
                                        "type": "string",
                                        "default": "",
                                        "minLength": 1
                                      },
                                      "key": {
                                        "$id": "#/deployment/properties/containers/items/anyOf/0/properties/envFromConfigmap/properties/envs/items/anyOf/0/properties/key",
                                        "title": "The configMap key",
                                        "description": "The key from the configMap to retrieve the environment variable from.",
                                        "type": "string",
                                        "default": "",
                                        "minLength": 1
                                      }
                                    }
                                  }
                                ]
                              }
                            }
                          }
                        }
                      ]
                    }
                  },
                  "envFromFieldRef": {
                    "$id": "#/deployment/properties/containers/items/anyOf/0/properties/envFromConfigmap",
                    "title": "The environment variables from field refs",
                    "description": "",
                    "type": "array",
                    "default": [],
                    "additionalItems": true,
                    "items": {
                      "$id": "#/deployment/properties/containers/items/anyOf/0/properties/envFromConfigmap/items",
                      "anyOf": [
                        {
                          "$id": "#/deployment/properties/containers/items/anyOf/0/properties/envFromConfigmap/items/anyOf/0",
                          "title": "The env from field ref",
                          "description": "",
                          "type": "object",
                          "default": {},
                          "additionalProperties": false,
                          "required": [
                            "name",
                            "fieldPath"
                          ],
                          "properties": {
                            "name": {
                              "$id": "#/deployment/properties/containers/items/anyOf/0/properties/envFromConfigmap/items/anyOf/0/properties/name",
                              "title": "The environment variable name",
                              "description": "",
                              "type": "string",
                              "default": "",
                              "minLength": 1
                            },
                            "fieldPath": {
                              "$id": "#/deployment/properties/containers/items/anyOf/0/properties/envFromConfigmap/items/anyOf/0/properties/fieldPath",
                              "title": "The field path",
                              "description": "",
                              "type": "string",
                              "default": "",
                              "minLength": 1
                            }
                          }
                        }
                      ]
                    }
                  },
                  "ports": {
                    "$id": "#/deployment/properties/containers/items/anyOf/0/properties/ports",
                    "title": "The container ports",
                    "description": "The container ports to forward to the outside.",
                    "type": "array",
                    "default": [],
                    "additionalItems": true,
                    "items": {
                      "$id": "#/deployment/properties/containers/items/anyOf/0/properties/ports/items",
                      "anyOf": [
                        {
                          "$id": "#/deployment/properties/containers/items/anyOf/0/properties/ports/items/anyOf/0",
                          "title": "The container port",
                          "description": "Structure of the port object.",
                          "type": "object",
                          "default": {},
                          "additionalProperties": false,
                          "required": [
                            "name",
                            "containerPort"
                          ],
                          "properties": {
                            "name": {
                              "$id": "#/deployment/properties/containers/items/anyOf/0/properties/ports/items/anyOf/0/properties/name",
                              "title": "The port name",
                              "description": "The name of the port outside of the container.",
                              "type": "string",
                              "default": "",
                              "minLength": 1
                            },
                            "containerPort": {
                              "$id": "#/deployment/properties/containers/items/anyOf/0/properties/ports/items/anyOf/0/properties/containerPort",
                              "title": "The container port",
                              "description": "The port of the container to forward outside of it.",
                              "type": "number",
                              "default": 0,
                              "minimum": 0
                            },
                            "protocol": {
                              "$id": "#/deployment/properties/containers/items/anyOf/0/properties/ports/items/anyOf/0/properties/protocol",
                              "title": "The port protocol",
                              "description": "",
                              "type": "string",
                              "default": "TCP",
                              "enum": [
                                "TCP",
                                "UDP",
                                "SCTP",
                                "HTTP"
                              ]
                            }
                          }
                        }
                      ]
                    }
                  },
                  "lifecycle": {},
                  "livenessProbe": {},
                  "readinessProbe": {},
                  "resources": {
                    "$id": "#/deployment/properties/containers/items/anyOf/0/properties/resources",
                    "title": "The container resources",
                    "description": "",
                    "type": "object",
                    "default": {},
                    "additionalProperties": false,
                    "properties": {
                      "requests": {
                        "$id": "#/deployment/properties/containers/items/anyOf/0/properties/resources/properties/requests",
                        "title": "The container resources requests",
                        "description": "The soft limit for the resources used by the container",
                        "type": "object",
                        "default": {},
                        "additionalProperties": false,
                        "properties": {
                          "cpu": {
                            "$id": "#/deployment/properties/containers/items/anyOf/0/properties/resources/properties/requests/properties/cpu",
                            "title": "The cpu limit",
                            "description": "Required to be at least 10m",
                            "type": "string",
                            "default": "100m",
                            "pattern": "^(0|[1-9][0-9]*)m$"
                          },
                          "memory": {
                            "$id": "#/deployment/properties/containers/items/anyOf/0/properties/resources/properties/requests/properties/memory",
                            "title": "The memory limit",
                            "description": "Required to be at least 10Mi",
                            "type": "string",
                            "default": "128Mi",
                            "pattern": "^(0|[1-9][0-9]*)Mi$"
                          }
                        }
                      },
                      "limits": {
                        "$id": "#/deployment/properties/containers/items/anyOf/0/properties/resources/properties/limits",
                        "title": "The container resources limits",
                        "description": "The hard limit for the resources used by the container",
                        "type": "object",
                        "default": {},
                        "additionalProperties": false,
                        "properties": {
                          "cpu": {
                            "$id": "#/deployment/properties/containers/items/anyOf/0/properties/resources/properties/requests/properties/cpu",
                            "title": "The cpu limit",
                            "description": "Required to be at least 10m",
                            "type": "string",
                            "default": "100m",
                            "pattern": "^[1-9][0-9]+m$"
                          },
                          "memory": {
                            "$id": "#/deployment/properties/containers/items/anyOf/0/properties/resources/properties/requests/properties/memory",
                            "title": "The memory limit",
                            "description": "Required to be at least 10Mi",
                            "type": "string",
                            "default": "128Mi",
                            "pattern": "^[1-9][0-9]+Mi$"
                          }
                        }
                      }
                    }
                  },
                  "volumeMounts": {
                    "$id": "#/deployment/properties/containers/items/anyOf/0/properties/volumeMounts",
                    "title": "The volume mounts",
                    "description": "The volumes to be mounted inside the container.",
                    "type": "array",
                    "default": [],
                    "additionalItems": true,
                    "items": {
                      "$id": "#/deployment/properties/containers/items/anyOf/0/properties/volumeMounts/items",
                      "anyOf": [
                        {
                          "$id": "#/deployment/properties/containers/items/anyOf/0/properties/volumeMounts/items/anyOf/0",
                          "title": "The volume mount",
                          "description": "The volume to be mounted inside the container.",
                          "type": "object",
                          "default": {},
                          "additionalProperties": false,
                          "required": [
                            "name",
                            "mountPath"
                          ],
                          "properties": {
                            "name": {
                              "$id": "#/deployment/properties/containers/items/anyOf/0/properties/volumeMounts/items/anyOf/0/properties/name",
                              "title": "The volume name",
                              "description": "The name of the volume to mount.",
                              "type": "string",
                              "default": "",
                              "minLength": 1
                            },
                            "mountPath": {
                              "$id": "#/deployment/properties/containers/items/anyOf/0/properties/volumeMounts/items/anyOf/0/properties/mountPath",
                              "title": "The mount path",
                              "description": "The path where to mount the volume inside the container.",
                              "type": "string",
                              "default": "",
                              "minLength": 1
                            },
                            "subPath": {
                              "$id": "#/deployment/properties/containers/items/anyOf/0/properties/volumeMounts/items/anyOf/0/properties/subPath",
                              "title": "The sub path",
                              "description": "The sub directory to create and use inside the persistent volume.",
                              "type": "string",
                              "default": "",
                              "minLength": 1
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              }
            ]
          }
        },
        "containers": {
          "$id": "#/statefulSet/properties/containers",
          "title": "The schema of containers",
          "description": "The containers to be created as part of this deployment.",
          "type": "array",
          "default": [],
          "additionalItems": true,
          "items": {
            "$id": "#/deployment/properties/containers/items",
            "anyOf": [
              {
                "$id": "#/deployment/properties/containers/items/anyOf/0",
                "title": "The schema of a container",
                "description": "",
                "type": "object",
                "additionalProperties": false,
                "required": [
                  "name",
                  "image",
                  "resources"
                ],
                "properties": {
                  "name": {
                    "$id": "#/properties/configMaps/items/anyOf/0/properties/name",
                    "title": "The container",
                    "description": "The name of the container to be created.",
                    "type": "string",
                    "default": "",
                    "minLength": 1
                  },
                  "image": {
                    "$id": "#/deployment/properties/items/anyOf/0/properties/image",
                    "title": "The docker image",
                    "description": "The docker image to be used as template for the container.",
                    "type": "object",
                    "default": {},
                    "additionalProperties": false,
                    "required": [
                      "repository",
                      "tag"
                    ],
                    "properties": {
                      "repository": {
                        "$id": "#/properties/configMaps/items/anyOf/0/properties/image/properties/repository",
                        "title": "The docker image repository",
                        "description": "The image repository from where to pull it.",
                        "type": "string",
                        "default": "",
                        "minLength": 1
                      },
                      "tag": {
                        "$id": "#/properties/configMaps/items/anyOf/0/properties/image/properties/tag",
                        "title": "The docker image tag",
                        "description": "The image tag to pull (i.e. latest).",
                        "type": "string",
                        "default": "",
                        "minLength": 1
                      }
                    }
                  },
                  "imagePullPolicy": {
                    "$id": "#/deployment/properties/containers/items/anyOf/0/properties/imagePullPolicy",
                    "title": "The image pull policy",
                    "description": "The image pull policy.",
                    "type": "string",
                    "default": "Always",
                    "enum": [
                      "Always",
                      "IfNotPresent",
                      "Never"
                    ]
                  },
                  "securityContext": {
                    "$id": "#/deployment/properties/containers/items/anyOf/0/properties/securityContext",
                    "title": "The security context",
                    "description": "Structue of the securityContext object.",
                    "type": "object"
                  },
                  "args": {
                    "$id": "#/deployment/properties/containers/items/anyOf/0/properties/args",
                    "title": "The container args",
                    "description": "The arguments to pass to the container entrypoint or the command, if a command is defined.",
                    "type": "array",
                    "default": [],
                    "additionalItems": true,
                    "items": {
                      "$id": "#/deployment/properties/containers/items/anyOf/0/properties/args/items",
                      "anyOf": [
                        {
                          "$id": "#/deployment/properties/containers/items/anyOf/0/properties/args/items/anyOf/0",
                          "title": "The argument",
                          "description": "Argument to be passed to the container entrypoint or command.",
                          "type": "string",
                          "default": "",
                          "minLength": 1
                        }
                      ]
                    }
                  },
                  "command": {
                    "$id": "#/deployment/properties/containers/items/anyOf/0/properties/command",
                    "title": "The conainter commands",
                    "description": "The command to be executed by the container.",
                    "type": "array",
                    "default": [],
                    "additionalItems": true,
                    "items": {
                      "$id": "#/deployment/properties/containers/items/anyOf/0/properties/command/items",
                      "anyOf": [
                        {
                          "$id": "#/deployment/properties/containers/items/anyOf/0/properties/command/items/anyOf/0",
                          "title": "The command",
                          "description": "Command to be executed by the container.",
                          "type": "string",
                          "default": "",
                          "minLength": 1
                        }
                      ]
                    }
                  },
                  "env": {
                    "$id": "#/deployment/properties/containers/items/anyOf/0/properties/env",
                    "title": "The environment variables",
                    "description": "Environment variables to be passed to the container.",
                    "type": "array",
                    "default": [],
                    "additionalItems": true,
                    "items": {
                      "$id": "#/deployment/properties/containers/items/anyOf/0/properties/env/items",
                      "anyOf": [
                        {
                          "$id": "#/deployment/properties/containers/items/anyOf/0/properties/env/items/anyOf/0",
                          "title": "The environment variable",
                          "description": "Structure of an environment variable.",
                          "type": "object",
                          "default": {},
                          "additionalProperties": false,
                          "required": [
                            "name",
                            "value"
                          ],
                          "properties": {
                            "name": {
                              "$id": "#/deployment/properties/containers/items/anyOf/0/properties/env/items/anyOf/0/properties/name",
                              "title": "The environment variable",
                              "description": "The name of the environment variable.",
                              "type": "string",
                              "default": "",
                              "minLength": 1
                            },
                            "value": {
                              "$id": "#/deployment/properties/containers/items/anyOf/0/properties/env/items/anyOf/0/properties/value",
                              "title": "The environment variable value",
                              "description": "The value of the environment variable.",
                              "type": "string",
                              "default": "",
                              "minLength": 1
                            }
                          }
                        }
                      ]
                    }
                  },
                  "envFromSecret": {
                    "$id": "#/deployment/properties/containers/items/anyOf/0/properties/envFromSecret",
                    "title": "The environment variables from secrets",
                    "description": "The environment variables to retrieve from secrets.",
                    "type": "array",
                    "default": [],
                    "additionalItems": true,
                    "items": {
                      "$id": "#/deployment/properties/containers/items/anyOf/0/properties/envFromSecret/items",
                      "anyOf": [
                        {
                          "$id": "#/deployment/properties/containers/items/anyOf/0/properties/envFromSecret/items/anyOf/0",
                          "title": "The environment variables from secret",
                          "description": "The environment variables to retrieve from a certain secret.",
                          "type": "object",
                          "default": {},
                          "required": [
                            "secretName",
                            "envs"
                          ],
                          "properties": {
                            "secretName": {
                              "$id": "#/deployment/properties/containers/items/anyOf/0/properties/envFromSecret/properties/secretName",
                              "title": "The secret name",
                              "description": "The name of the secret to retrieve environment variables from.",
                              "type": "string",
                              "default": "",
                              "minLength": 1
                            },
                            "envs": {
                              "$id": "#/deployment/properties/containers/items/anyOf/0/properties/envFromSecret/properties/envs",
                              "title": "The environment variables",
                              "description": "The environment variables to retrieve from the secret.",
                              "type": "array",
                              "default": [],
                              "additionalItems": true,
                              "items": {
                                "$id": "#/deployment/properties/containers/items/anyOf/0/properties/envFromSecret/properties/envs/items",
                                "anyOf": [
                                  {
                                    "$id": "#/deployment/properties/containers/items/anyOf/0/properties/envFromSecret/properties/envs/items/anyOf/0",
                                    "title": "The environment variable",
                                    "description": "The environment variable to retrie from the secret.",
                                    "type": "object",
                                    "default": {},
                                    "additionalProperties": false,
                                    "required": [
                                      "name",
                                      "key"
                                    ],
                                    "properties": {
                                      "name": {
                                        "$id": "#/deployment/properties/containers/items/anyOf/0/properties/envFromSecret/properties/envs/items/anyOf/0/properties/name",
                                        "title": "The environment variable name",
                                        "description": "The name of the environment variable inside the container.",
                                        "type": "string",
                                        "default": "",
                                        "minLength": 1
                                      },
                                      "key": {
                                        "$id": "#/deployment/properties/containers/items/anyOf/0/properties/envFromSecret/properties/envs/items/anyOf/0/properties/key",
                                        "title": "The secret key",
                                        "description": "The key from the secret to retrieve the environment variable from.",
                                        "type": "string",
                                        "default": "",
                                        "minLength": 1
                                      }
                                    }
                                  }
                                ]
                              }
                            }
                          }
                        }
                      ]
                    }
                  },
                  "envFromConfigmap": {
                    "$id": "#/deployment/properties/containers/items/anyOf/0/properties/envFromConfigmap",
                    "title": "The environment variables from configMaps",
                    "description": "The environment variables to retrieve from configMaps.",
                    "type": "array",
                    "default": [],
                    "additionalItems": true,
                    "items": {
                      "$id": "#/deployment/properties/containers/items/anyOf/0/properties/envFromConfigmap/items",
                      "anyOf": [
                        {
                          "$id": "#/deployment/properties/containers/items/anyOf/0/properties/envFromConfigmap/items/anyOf/0",
                          "title": "The environment variables from configMap",
                          "description": "The environment variables to retrieve from a certain configMap.",
                          "type": "object",
                          "default": {},
                          "required": [
                            "configMapName",
                            "envs"
                          ],
                          "properties": {
                            "configMapName": {
                              "$id": "#/deployment/properties/containers/items/anyOf/0/properties/envFromConfigmap/properties/configMapName",
                              "title": "The configMap name",
                              "description": "The name of the configMap to retrieve environment variables from.",
                              "type": "string",
                              "default": "",
                              "minLength": 1
                            },
                            "envs": {
                              "$id": "#/deployment/properties/containers/items/anyOf/0/properties/envFromConfigmap/properties/envs",
                              "title": "The environment variables",
                              "description": "The environment variables to retrieve from the configMap.",
                              "type": "array",
                              "default": [],
                              "additionalItems": true,
                              "items": {
                                "$id": "#/deployment/properties/containers/items/anyOf/0/properties/envFromConfigmap/properties/envs/items",
                                "anyOf": [
                                  {
                                    "$id": "#/deployment/properties/containers/items/anyOf/0/properties/envFromConfigmap/properties/envs/items/anyOf/0",
                                    "title": "The environment variable",
                                    "description": "The environment variable to retrie from the configMap.",
                                    "type": "object",
                                    "default": {},
                                    "additionalProperties": false,
                                    "required": [
                                      "name",
                                      "key"
                                    ],
                                    "properties": {
                                      "name": {
                                        "$id": "#/deployment/properties/containers/items/anyOf/0/properties/envFromConfigmap/properties/envs/items/anyOf/0/properties/name",
                                        "title": "The environment variable name",
                                        "description": "The name of the environment variable inside the container.",
                                        "type": "string",
                                        "default": "",
                                        "minLength": 1
                                      },
                                      "key": {
                                        "$id": "#/deployment/properties/containers/items/anyOf/0/properties/envFromConfigmap/properties/envs/items/anyOf/0/properties/key",
                                        "title": "The configMap key",
                                        "description": "The key from the configMap to retrieve the environment variable from.",
                                        "type": "string",
                                        "default": "",
                                        "minLength": 1
                                      }
                                    }
                                  }
                                ]
                              }
                            }
                          }
                        }
                      ]
                    }
                  },
                  "envFromFieldRef": {
                    "$id": "#/deployment/properties/containers/items/anyOf/0/properties/envFromConfigmap",
                    "title": "The environment variables from field refs",
                    "description": "",
                    "type": "array",
                    "default": [],
                    "additionalItems": true,
                    "items": {
                      "$id": "#/deployment/properties/containers/items/anyOf/0/properties/envFromConfigmap/items",
                      "anyOf": [
                        {
                          "$id": "#/deployment/properties/containers/items/anyOf/0/properties/envFromConfigmap/items/anyOf/0",
                          "title": "The env from field ref",
                          "description": "",
                          "type": "object",
                          "default": {},
                          "additionalProperties": false,
                          "required": [
                            "name",
                            "fieldPath"
                          ],
                          "properties": {
                            "name": {
                              "$id": "#/deployment/properties/containers/items/anyOf/0/properties/envFromConfigmap/items/anyOf/0/properties/name",
                              "title": "The environment variable name",
                              "description": "",
                              "type": "string",
                              "default": "",
                              "minLength": 1
                            },
                            "fieldPath": {
                              "$id": "#/deployment/properties/containers/items/anyOf/0/properties/envFromConfigmap/items/anyOf/0/properties/fieldPath",
                              "title": "The field path",
                              "description": "",
                              "type": "string",
                              "default": "",
                              "minLength": 1
                            }
                          }
                        }
                      ]
                    }
                  },
                  "ports": {
                    "$id": "#/deployment/properties/containers/items/anyOf/0/properties/ports",
                    "title": "The container ports",
                    "description": "The container ports to forward to the outside.",
                    "type": "array",
                    "default": [],
                    "additionalItems": true,
                    "items": {
                      "$id": "#/deployment/properties/containers/items/anyOf/0/properties/ports/items",
                      "anyOf": [
                        {
                          "$id": "#/deployment/properties/containers/items/anyOf/0/properties/ports/items/anyOf/0",
                          "title": "The container port",
                          "description": "Structure of the port object.",
                          "type": "object",
                          "default": {},
                          "additionalProperties": false,
                          "required": [
                            "name",
                            "containerPort"
                          ],
                          "properties": {
                            "name": {
                              "$id": "#/deployment/properties/containers/items/anyOf/0/properties/ports/items/anyOf/0/properties/name",
                              "title": "The port name",
                              "description": "The name of the port outside of the container.",
                              "type": "string",
                              "default": "",
                              "minLength": 1
                            },
                            "containerPort": {
                              "$id": "#/deployment/properties/containers/items/anyOf/0/properties/ports/items/anyOf/0/properties/containerPort",
                              "title": "The container port",
                              "description": "The port of the container to forward outside of it.",
                              "type": "number",
                              "default": 0,
                              "minimum": 0
                            },
                            "protocol": {
                              "$id": "#/deployment/properties/containers/items/anyOf/0/properties/ports/items/anyOf/0/properties/protocol",
                              "title": "The port protocol",
                              "description": "",
                              "type": "string",
                              "default": "TCP",
                              "enum": [
                                "TCP",
                                "UDP",
                                "SCTP",
                                "HTTP"
                              ]
                            }
                          }
                        }
                      ]
                    }
                  },
                  "lifecycle": {},
                  "livenessProbe": {},
                  "readinessProbe": {},
                  "resources": {
                    "$id": "#/deployment/properties/containers/items/anyOf/0/properties/resources",
                    "title": "The container resources",
                    "description": "",
                    "type": "object",
                    "default": {},
                    "additionalProperties": false,
                    "properties": {
                      "requests": {
                        "$id": "#/deployment/properties/containers/items/anyOf/0/properties/resources/properties/requests",
                        "title": "The container resources requests",
                        "description": "The soft limit for the resources used by the container",
                        "type": "object",
                        "default": {},
                        "additionalProperties": false,
                        "properties": {
                          "cpu": {
                            "$id": "#/deployment/properties/containers/items/anyOf/0/properties/resources/properties/requests/properties/cpu",
                            "title": "The cpu limit",
                            "description": "Required to be at least 10m",
                            "type": "string",
                            "default": "100m",
                            "pattern": "^(0|[1-9][0-9]*)m$"
                          },
                          "memory": {
                            "$id": "#/deployment/properties/containers/items/anyOf/0/properties/resources/properties/requests/properties/memory",
                            "title": "The memory limit",
                            "description": "Required to be at least 10Mi",
                            "type": "string",
                            "default": "128Mi",
                            "pattern": "^(0|[1-9][0-9]*)Mi$"
                          }
                        }
                      },
                      "limits": {
                        "$id": "#/deployment/properties/containers/items/anyOf/0/properties/resources/properties/limits",
                        "title": "The container resources limits",
                        "description": "The hard limit for the resources used by the container",
                        "type": "object",
                        "default": {},
                        "additionalProperties": false,
                        "properties": {
                          "cpu": {
                            "$id": "#/deployment/properties/containers/items/anyOf/0/properties/resources/properties/requests/properties/cpu",
                            "title": "The cpu limit",
                            "description": "Required to be at least 10m",
                            "type": "string",
                            "default": "100m",
                            "pattern": "^[1-9][0-9]+m$"
                          },
                          "memory": {
                            "$id": "#/deployment/properties/containers/items/anyOf/0/properties/resources/properties/requests/properties/memory",
                            "title": "The memory limit",
                            "description": "Required to be at least 10Mi",
                            "type": "string",
                            "default": "128Mi",
                            "pattern": "^[1-9][0-9]+Mi$"
                          }
                        }
                      }
                    }
                  },
                  "volumeMounts": {
                    "$id": "#/deployment/properties/containers/items/anyOf/0/properties/volumeMounts",
                    "title": "The volume mounts",
                    "description": "The volumes to be mounted inside the container.",
                    "type": "array",
                    "default": [],
                    "additionalItems": true,
                    "items": {
                      "$id": "#/deployment/properties/containers/items/anyOf/0/properties/volumeMounts/items",
                      "anyOf": [
                        {
                          "$id": "#/deployment/properties/containers/items/anyOf/0/properties/volumeMounts/items/anyOf/0",
                          "title": "The volume mount",
                          "description": "The volume to be mounted inside the container.",
                          "type": "object",
                          "default": {},
                          "additionalProperties": false,
                          "required": [
                            "name",
                            "mountPath"
                          ],
                          "properties": {
                            "name": {
                              "$id": "#/deployment/properties/containers/items/anyOf/0/properties/volumeMounts/items/anyOf/0/properties/name",
                              "title": "The volume name",
                              "description": "The name of the volume to mount.",
                              "type": "string",
                              "default": "",
                              "minLength": 1
                            },
                            "mountPath": {
                              "$id": "#/deployment/properties/containers/items/anyOf/0/properties/volumeMounts/items/anyOf/0/properties/mountPath",
                              "title": "The mount path",
                              "description": "The path where to mount the volume inside the container.",
                              "type": "string",
                              "default": "",
                              "minLength": 1
                            },
                            "subPath": {
                              "$id": "#/deployment/properties/containers/items/anyOf/0/properties/volumeMounts/items/anyOf/0/properties/subPath",
                              "title": "The sub path",
                              "description": "The sub directory to create and use inside the persistent volume.",
                              "type": "string",
                              "default": "",
                              "minLength": 1
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              }
            ]
          }
        },
        "volumes": {
          "$id": "#/statefulSet/properties/volumes",
          "title": "The volumes",
          "description": "The volumes to attach.",
          "type": "array",
          "default": [],
          "additionalItems": true,
          "items": {
            "$id": "#/deployment/properties/volumes/items",
            "anyOf": [
              {
                "$id": "#/deployment/properties/volumes/items/anyOf/0",
                "title": "The volume",
                "description": "The volume attach to the deployment instance.",
                "type": "object",
                "default": {},
                "additionalProperties": true,
                "required": [
                  "name"
                ],
                "properties": {
                  "name": {
                    "$id": "#/deployment/properties/volumes/items/anyOf/0/properties/name",
                    "title": "The volume name",
                    "description": "The name of the volume.",
                    "type": "string",
                    "default": "",
                    "minLength": 1
                  },
                  "type": {
                    "$id": "#/deployment/properties/volumes/items/anyOf/0/properties/type",
                    "title": "The volume type",
                    "description": "The type of the volume.",
                    "type": "string",
                    "default": "",
                    "enum": [
                      "secret",
                      "pvc",
                      "configMap",
                      "emptyDir"
                    ]
                  },
                  "typeName": {
                    "$id": "#/deployment/properties/volumes/items/anyOf/0/properties/typeName",
                    "title": "The type name",
                    "description": "The name of the object of the specified type.",
                    "type": "string",
                    "default": "",
                    "minLength": 1
                  },
                  "items": {
                    "$id": "#/deployment/properties/volumes/items/anyOf/0/properties/items",
                    "title": "ConfigMap or secret items",
                    "description": "Array of configurations for volumes created from configMaps or secrets.",
                    "type": "array",
                    "default": [],
                    "additionalItems": true
                  },
                  "projected": {
                    "$id": "#/deployment/properties/volumes/items/anyOf/0/projected",
                    "title": "The projected volumes",
                    "description": "",
                    "type": "array",
                    "default": [],
                    "additionalItems": true,
                    "items": {
                      "$id": "#/deployment/properties/volumes/items/anyOf/0/projected/items",
                      "anyOf": [
                        {
                          "$id": "#/deployment/properties/volumes/items/anyOf/0/projected/items/anyOf/0",
                          "title": "The projected volume source",
                          "description": "",
                          "type": "object",
                          "default": {},
                          "additionalProperties": false,
                          "required": [
                            "type",
                            "typeName"
                          ],
                          "properties": {
                            "type": {
                              "$id": "#/deployment/properties/volumes/items/anyOf/0/projected/items/anyOf/0/properties/type",
                              "title": "The volume type",
                              "description": "",
                              "type": "string",
                              "default": "",
                              "enum": [
                                "secret",
                                "configMap"
                              ]
                            },
                            "typeName": {
                              "$id": "#/deployment/properties/volumes/items/anyOf/0/projected/items/anyOf/0/properties/typeName",
                              "title": "The type name",
                              "description": "The name of the object of the specified type.",
                              "type": "string",
                              "default": "",
                              "minLength": 1
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              }
            ]
          }
        }
      }
    },
    "storageClasses": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "$id": "#/storageClasses",
      "title": "Storage Classes Schema",
      "description": "Schema for defining Kubernetes Storage Classes",
      "type": "array",
      "default": [],
      "items": {
        "$id": "#/items",
        "title": "Storage Class",
        "description": "A Kubernetes Storage Class definition",
        "type": "object",
        "additionalProperties": false,
        "required": [
          "name",
          "provisioner",
          "volumeBindingMode",
          "reclaimPolicy"
        ],
        "properties": {
          "name": {
            "$id": "#/items/properties/name",
            "title": "The name of the storage class",
            "description": "The name of the Storage Class resource",
            "type": "string",
            "default": "",
            "minLength": 1
          },
          "parameters": {
            "$id": "#/items/properties/parameters",
            "title": "The storage class parameters",
            "description": "Parameters for the storage class",
            "type": "object",
            "default": {}
          },
          "provisioner": {
            "$id": "#/items/properties/provisioner",
            "title": "The provisioner",
            "description": "The provisioner to use for this Storage Class",
            "type": "string",
            "default": "",
            "minLength": 1
          },
          "volumeBindingMode": {
            "$id": "#/items/properties/volumeBindingMode",
            "title": "The volume binding mode",
            "description": "The volume binding mode for this Storage Class",
            "type": "string",
            "default": "",
            "enum": [
              "Immediate",
              "WaitForFirstConsumer"
            ]
          },
          "reclaimPolicy": {
            "$id": "#/items/properties/reclaimPolicy",
            "title": "The reclaim policy",
            "description": "The reclaim policy for this Storage Class",
            "type": "string",
            "default": "",
            "enum": [
              "Delete",
              "Retain"
            ]
          },
          "allowedTopologies": {
            "$id": "#/items/properties/allowedTopologies",
            "title": "Allowed topologies",
            "description": "Specifies the allowed topologies for the storage class",
            "type": "array",
            "items": {
              "type": "object",
              "additionalProperties": false,
              "required": [
                "matchLabelExpressions"
              ],
              "properties": {
                "matchLabelExpressions": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": false,
                    "required": [
                      "key",
                      "values"
                    ],
                    "properties": {
                      "key": {
                        "type": "string"
                      },
                      "values": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "labels": {
            "$id": "#/items/properties/labels",
            "title": "The labels",
            "description": "Labels to attach to the StorageClass",
            "type": "object"
          }
        }
      }
    },
    "vaultSecrets": {
      "$schema": "http://json-schema.org/draft-07/schema",
      "$id": "#/vaultSecrets",
      "title": "Vault Secrets Schema",
      "description": "Schema for defining Vault secrets in Kubernetes",
      "type": "array",
      "default": [],
      "additionalItems": true,
      "items": {
        "$id": "#/items",
        "title": "Vault Secret",
        "description": "A Vault secret definition",
        "type": "object",
        "default": {},
        "additionalProperties": false,
        "required": [
          "name",
          "templates"
        ],
        "properties": {
          "name": {
            "$id": "#/items/properties/name",
            "title": "Resource name",
            "description": "The name of the secret resource",
            "type": "string",
            "minLength": 1
          },
          "type": {
            "$id": "#/items/properties/type",
            "title": "Secret type",
            "description": "The type of the Kubernetes secret",
            "type": "string",
            "default": "Opaque",
            "enum": [
              "Opaque",
              "kubernetes.io/service-account-token",
              "kubernetes.io/dockercfg",
              "kubernetes.io/dockerconfigjson",
              "kubernetes.io/basic-auth",
              "kubernetes.io/ssh-auth",
              "kubernetes.io/tls"
            ]
          },
          "path": {
            "$id": "#/items/properties/path",
            "title": "Path to the secret in Vault",
            "description": "The path where the secret is stored in Vault",
            "type": "string",
            "minLength": 1
          },
          "templates": {
            "$id": "#/items/properties/templates",
            "title": "Secret templates",
            "description": "Collection of key-value pairs to represent the content of the kubernetes secret. See https://github.com/ricoberger/vault-secrets-operator?tab=readme-ov-file#using-templated-secrets",
            "type": "object",
            "default": {}
          }
        }
      }
    }
  }
}