{{- with .Values.job }}
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ template "helpers.app.name" $ }}
spec:
  {{- if .backoffLimit }}
  backoffLimit: {{ .backoffLimit }}
  {{- end }}
  {{- if .completions }}
  completions: {{ .completions }}
  {{- end }}
  {{- if .parallelism }}
  parallelism: {{ .parallelism }}
  {{- end }}
  {{- if .ttlSecondsAfterFinished }}
  ttlSecondsAfterFinished: {{ .ttlSecondsAfterFinished }}
  {{- end }}
  template:
    metadata:
      annotations:
        {{- if $.Values.forceRedeploy }}
        rollme: {{ randAlphaNum 5 | quote }}
        {{- end }}
        {{- with .annotations }}
        {{- include "helpers.tplvalues.render" ( dict "value" . "context" $) | nindent 8 }}
        {{- end }}
      labels:
    spec:
      {{- with .serviceAccountName }}
      serviceAccountName: {{ . }}
      {{- end }}
      {{- with .securityContext }}
      securityContext: {{- include "helpers.tplvalues.render" (dict "value" . "context" $) | nindent 8 }}
      {{- end }}
      {{- if .imagePullSecrets }}
      imagePullSecrets:
      {{- range .imagePullSecrets }}
      - name: {{ .name }}
      {{- end }}
      {{- end }}
      restartPolicy: {{ .restartPolicy | default "Never" }}
      {{- with .initContainers }}
      initContainers:
        {{- range . }}
        -
          name: {{ .name | default (printf "%s-%s" .name (lower (randAlphaNum 5))) }}
          image: {{ .image.repository }}:{{ .image.tag }}
          imagePullPolicy: {{ .imagePullPolicy | default "Always" }}
          {{- with .securityContext }}
          securityContext: {{- include "helpers.tplvalues.render" ( dict "value" . "context" $) | nindent 12 }}
          {{- end }}
          {{- with .args }}
          args: {{- include "helpers.tplvalues.render" ( dict "value" . "context" $) | nindent 10 }}
          {{- end }}
          {{- if .command }}
          {{- if typeIs "string" .command }}
          command: {{ printf "[\"%s\"]" (join ("\", \"") (without (splitList " " .command) "" )) }}
          {{- else }}
          command: {{- include "helpers.tplvalues.render" ( dict "value" .command "context" $) | nindent 10 }}
          {{- end }}
          {{- end }}
          {{- include "helpers.containers.env" (dict "value" . "context" $) | indent 10 }}
          {{- include "helpers.containers.envFrom" (dict "value" . "context" $) | indent 10 }}
          {{- with .ports }}
          ports: {{- include "helpers.tplvalues.render" ( dict "value" . "context" $) | nindent 10 }}
          {{- end }}
          {{- with .lifecycle }}
          lifecycle: {{- include "helpers.tplvalues.render" ( dict "value" . "context" $) | nindent 12 }}
          {{- end }}
          {{- with .livenessProbe }}
          livenessProbe: {{- include "helpers.tplvalues.render" ( dict "value" . "context" $) | nindent 12 }}
          {{- end }}
          {{- with .readinessProbe }}
          readinessProbe: {{- include "helpers.tplvalues.render" ( dict "value" . "context" $) | nindent 12 }}
          {{- end }}
          {{- with .resources }}
          resources: {{- include "helpers.tplvalues.render" ( dict "value" . "context" $) | nindent 12 }}
          {{- end }}
          {{- with .volumeMounts }}
          volumeMounts: {{- include "helpers.volumes.renderVolumeMounts" (dict "value" . "context" $) | nindent 10 -}}
          {{- end }}
        {{- end }}
      {{- end }}
      {{- include "helpers.initContainers.renderDefaults" (dict "context" .) | nindent 6 -}}
      {{- with .containers }}
      containers:
        {{- range . }}
        -
          name: {{ .name | default (printf "%s-%s" .name (lower (randAlphaNum 5))) }}
          image: {{ .image.repository }}:{{ .image.tag }}
          imagePullPolicy: {{ .imagePullPolicy | default "Always" }}
          {{- with .securityContext }}
          securityContext: {{- include "helpers.tplvalues.render" ( dict "value" . "context" $) | nindent 12 }}
          {{- end }}
          {{- with .args }}
          args: {{- include "helpers.tplvalues.render" ( dict "value" . "context" $) | nindent 10 }}
          {{- end }}
          {{- if .command }}
          {{- if typeIs "string" .command }}
          command: {{ printf "[\"%s\"]" (join ("\", \"") (without (splitList " " .command) "" )) }}
          {{- else }}
          command: {{- include "helpers.tplvalues.render" ( dict "value" .command "context" $) | nindent 10 }}
          {{- end }}
          {{- end }}
          {{- include "helpers.containers.env" (dict "value" . "context" $) | indent 10 }}
          {{- include "helpers.containers.envFrom" (dict "value" . "context" $) | indent 10 }}
          {{- with .ports }}
          ports: {{- include "helpers.tplvalues.render" ( dict "value" . "context" $) | nindent 10 }}
          {{- end }}
          {{- with .lifecycle }}
          lifecycle: {{- include "helpers.tplvalues.render" ( dict "value" . "context" $) | nindent 12 }}
          {{- end }}
          {{- with .livenessProbe }}
          livenessProbe: {{- include "helpers.tplvalues.render" ( dict "value" . "context" $) | nindent 12 }}
          {{- end }}
          {{- with .readinessProbe }}
          readinessProbe: {{- include "helpers.tplvalues.render" ( dict "value" . "context" $) | nindent 12 }}
          {{- end }}
          {{- with .resources }}
          resources: {{- include "helpers.tplvalues.render" ( dict "value" . "context" $) | nindent 12 }}
          {{- end }}
          {{- with .volumeMounts }}
          volumeMounts: {{- include "helpers.volumes.renderVolumeMounts" (dict "value" . "context" $) | nindent 10 -}}
          {{- end }}
        {{- end }}
      {{- end }}
      {{- with .volumes }}
      volumes: {{- include "helpers.volumes.renderVolume" (dict "value" . "context" $) | indent 8 -}}
      {{- end }}
{{- end }}